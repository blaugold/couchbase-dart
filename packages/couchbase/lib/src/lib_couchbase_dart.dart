// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint
import 'dart:ffi' as ffi;

/// Bindings for libCouchbaseDart
class LibCouchbaseDart {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  LibCouchbaseDart(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  LibCouchbaseDart.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  CBDMessageBuffer CBDMessageBuffer_Create(
    int initialCapacity,
  ) {
    return _CBDMessageBuffer_Create(
      initialCapacity,
    );
  }

  late final _CBDMessageBuffer_CreatePtr =
      _lookup<ffi.NativeFunction<CBDMessageBuffer Function(ffi.Size)>>(
          'CBDMessageBuffer_Create');
  late final _CBDMessageBuffer_Create =
      _CBDMessageBuffer_CreatePtr.asFunction<CBDMessageBuffer Function(int)>();

  void CBDMessageBuffer_Destroy(
    CBDMessageBuffer buffer,
  ) {
    return _CBDMessageBuffer_Destroy(
      buffer,
    );
  }

  late final _CBDMessageBuffer_DestroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer)>>(
          'CBDMessageBuffer_Destroy');
  late final _CBDMessageBuffer_Destroy = _CBDMessageBuffer_DestroyPtr
      .asFunction<void Function(CBDMessageBuffer)>();

  void CBDMessageBuffer_Reset(
    CBDMessageBuffer buffer,
  ) {
    return _CBDMessageBuffer_Reset(
      buffer,
    );
  }

  late final _CBDMessageBuffer_ResetPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer)>>(
          'CBDMessageBuffer_Reset');
  late final _CBDMessageBuffer_Reset =
      _CBDMessageBuffer_ResetPtr.asFunction<void Function(CBDMessageBuffer)>();

  void CBDMessageBuffer_WriteBool(
    CBDMessageBuffer buffer,
    bool value,
  ) {
    return _CBDMessageBuffer_WriteBool(
      buffer,
      value,
    );
  }

  late final _CBDMessageBuffer_WriteBoolPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer, ffi.Bool)>>(
      'CBDMessageBuffer_WriteBool');
  late final _CBDMessageBuffer_WriteBool = _CBDMessageBuffer_WriteBoolPtr
      .asFunction<void Function(CBDMessageBuffer, bool)>();

  void CBDMessageBuffer_WriteUInt8(
    CBDMessageBuffer buffer,
    int value,
  ) {
    return _CBDMessageBuffer_WriteUInt8(
      buffer,
      value,
    );
  }

  late final _CBDMessageBuffer_WriteUInt8Ptr = _lookup<
          ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer, ffi.Uint8)>>(
      'CBDMessageBuffer_WriteUInt8');
  late final _CBDMessageBuffer_WriteUInt8 = _CBDMessageBuffer_WriteUInt8Ptr
      .asFunction<void Function(CBDMessageBuffer, int)>();

  void CBDMessageBuffer_WriteInt8(
    CBDMessageBuffer buffer,
    int value,
  ) {
    return _CBDMessageBuffer_WriteInt8(
      buffer,
      value,
    );
  }

  late final _CBDMessageBuffer_WriteInt8Ptr = _lookup<
          ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer, ffi.Int8)>>(
      'CBDMessageBuffer_WriteInt8');
  late final _CBDMessageBuffer_WriteInt8 = _CBDMessageBuffer_WriteInt8Ptr
      .asFunction<void Function(CBDMessageBuffer, int)>();

  void CBDMessageBuffer_WriteUInt16(
    CBDMessageBuffer buffer,
    int value,
  ) {
    return _CBDMessageBuffer_WriteUInt16(
      buffer,
      value,
    );
  }

  late final _CBDMessageBuffer_WriteUInt16Ptr = _lookup<
          ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer, ffi.Uint16)>>(
      'CBDMessageBuffer_WriteUInt16');
  late final _CBDMessageBuffer_WriteUInt16 = _CBDMessageBuffer_WriteUInt16Ptr
      .asFunction<void Function(CBDMessageBuffer, int)>();

  void CBDMessageBuffer_WriteInt16(
    CBDMessageBuffer buffer,
    int value,
  ) {
    return _CBDMessageBuffer_WriteInt16(
      buffer,
      value,
    );
  }

  late final _CBDMessageBuffer_WriteInt16Ptr = _lookup<
          ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer, ffi.Int16)>>(
      'CBDMessageBuffer_WriteInt16');
  late final _CBDMessageBuffer_WriteInt16 = _CBDMessageBuffer_WriteInt16Ptr
      .asFunction<void Function(CBDMessageBuffer, int)>();

  void CBDMessageBuffer_WriteUInt32(
    CBDMessageBuffer buffer,
    int value,
  ) {
    return _CBDMessageBuffer_WriteUInt32(
      buffer,
      value,
    );
  }

  late final _CBDMessageBuffer_WriteUInt32Ptr = _lookup<
          ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer, ffi.Uint32)>>(
      'CBDMessageBuffer_WriteUInt32');
  late final _CBDMessageBuffer_WriteUInt32 = _CBDMessageBuffer_WriteUInt32Ptr
      .asFunction<void Function(CBDMessageBuffer, int)>();

  void CBDMessageBuffer_WriteInt32(
    CBDMessageBuffer buffer,
    int value,
  ) {
    return _CBDMessageBuffer_WriteInt32(
      buffer,
      value,
    );
  }

  late final _CBDMessageBuffer_WriteInt32Ptr = _lookup<
          ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer, ffi.Int32)>>(
      'CBDMessageBuffer_WriteInt32');
  late final _CBDMessageBuffer_WriteInt32 = _CBDMessageBuffer_WriteInt32Ptr
      .asFunction<void Function(CBDMessageBuffer, int)>();

  void CBDMessageBuffer_WriteUInt64(
    CBDMessageBuffer buffer,
    int value,
  ) {
    return _CBDMessageBuffer_WriteUInt64(
      buffer,
      value,
    );
  }

  late final _CBDMessageBuffer_WriteUInt64Ptr = _lookup<
          ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer, ffi.Uint64)>>(
      'CBDMessageBuffer_WriteUInt64');
  late final _CBDMessageBuffer_WriteUInt64 = _CBDMessageBuffer_WriteUInt64Ptr
      .asFunction<void Function(CBDMessageBuffer, int)>();

  void CBDMessageBuffer_WriteInt64(
    CBDMessageBuffer buffer,
    int value,
  ) {
    return _CBDMessageBuffer_WriteInt64(
      buffer,
      value,
    );
  }

  late final _CBDMessageBuffer_WriteInt64Ptr = _lookup<
          ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer, ffi.Int64)>>(
      'CBDMessageBuffer_WriteInt64');
  late final _CBDMessageBuffer_WriteInt64 = _CBDMessageBuffer_WriteInt64Ptr
      .asFunction<void Function(CBDMessageBuffer, int)>();

  void CBDMessageBuffer_WriteFloat(
    CBDMessageBuffer buffer,
    double value,
  ) {
    return _CBDMessageBuffer_WriteFloat(
      buffer,
      value,
    );
  }

  late final _CBDMessageBuffer_WriteFloatPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer, ffi.Float)>>(
      'CBDMessageBuffer_WriteFloat');
  late final _CBDMessageBuffer_WriteFloat = _CBDMessageBuffer_WriteFloatPtr
      .asFunction<void Function(CBDMessageBuffer, double)>();

  void CBDMessageBuffer_WriteDouble(
    CBDMessageBuffer buffer,
    double value,
  ) {
    return _CBDMessageBuffer_WriteDouble(
      buffer,
      value,
    );
  }

  late final _CBDMessageBuffer_WriteDoublePtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer, ffi.Double)>>(
      'CBDMessageBuffer_WriteDouble');
  late final _CBDMessageBuffer_WriteDouble = _CBDMessageBuffer_WriteDoublePtr
      .asFunction<void Function(CBDMessageBuffer, double)>();

  ffi.Pointer<ffi.Void> CBDMessageBuffer_Allocate(
    CBDMessageBuffer buffer,
    int size,
  ) {
    return _CBDMessageBuffer_Allocate(
      buffer,
      size,
    );
  }

  late final _CBDMessageBuffer_AllocatePtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Void> Function(
              CBDMessageBuffer, ffi.Size)>>('CBDMessageBuffer_Allocate');
  late final _CBDMessageBuffer_Allocate = _CBDMessageBuffer_AllocatePtr
      .asFunction<ffi.Pointer<ffi.Void> Function(CBDMessageBuffer, int)>();

  bool CBDMessageBuffer_ReadBool(
    CBDMessageBuffer buffer,
  ) {
    return _CBDMessageBuffer_ReadBool(
      buffer,
    );
  }

  late final _CBDMessageBuffer_ReadBoolPtr =
      _lookup<ffi.NativeFunction<ffi.Bool Function(CBDMessageBuffer)>>(
          'CBDMessageBuffer_ReadBool');
  late final _CBDMessageBuffer_ReadBool = _CBDMessageBuffer_ReadBoolPtr
      .asFunction<bool Function(CBDMessageBuffer)>();

  int CBDMessageBuffer_ReadUInt8(
    CBDMessageBuffer buffer,
  ) {
    return _CBDMessageBuffer_ReadUInt8(
      buffer,
    );
  }

  late final _CBDMessageBuffer_ReadUInt8Ptr =
      _lookup<ffi.NativeFunction<ffi.Uint8 Function(CBDMessageBuffer)>>(
          'CBDMessageBuffer_ReadUInt8');
  late final _CBDMessageBuffer_ReadUInt8 = _CBDMessageBuffer_ReadUInt8Ptr
      .asFunction<int Function(CBDMessageBuffer)>();

  int CBDMessageBuffer_ReadInt8(
    CBDMessageBuffer buffer,
  ) {
    return _CBDMessageBuffer_ReadInt8(
      buffer,
    );
  }

  late final _CBDMessageBuffer_ReadInt8Ptr =
      _lookup<ffi.NativeFunction<ffi.Int8 Function(CBDMessageBuffer)>>(
          'CBDMessageBuffer_ReadInt8');
  late final _CBDMessageBuffer_ReadInt8 = _CBDMessageBuffer_ReadInt8Ptr
      .asFunction<int Function(CBDMessageBuffer)>();

  int CBDMessageBuffer_ReadUInt16(
    CBDMessageBuffer buffer,
  ) {
    return _CBDMessageBuffer_ReadUInt16(
      buffer,
    );
  }

  late final _CBDMessageBuffer_ReadUInt16Ptr =
      _lookup<ffi.NativeFunction<ffi.Uint16 Function(CBDMessageBuffer)>>(
          'CBDMessageBuffer_ReadUInt16');
  late final _CBDMessageBuffer_ReadUInt16 = _CBDMessageBuffer_ReadUInt16Ptr
      .asFunction<int Function(CBDMessageBuffer)>();

  int CBDMessageBuffer_ReadInt16(
    CBDMessageBuffer buffer,
  ) {
    return _CBDMessageBuffer_ReadInt16(
      buffer,
    );
  }

  late final _CBDMessageBuffer_ReadInt16Ptr =
      _lookup<ffi.NativeFunction<ffi.Int16 Function(CBDMessageBuffer)>>(
          'CBDMessageBuffer_ReadInt16');
  late final _CBDMessageBuffer_ReadInt16 = _CBDMessageBuffer_ReadInt16Ptr
      .asFunction<int Function(CBDMessageBuffer)>();

  int CBDMessageBuffer_ReadUInt32(
    CBDMessageBuffer buffer,
  ) {
    return _CBDMessageBuffer_ReadUInt32(
      buffer,
    );
  }

  late final _CBDMessageBuffer_ReadUInt32Ptr =
      _lookup<ffi.NativeFunction<ffi.Uint32 Function(CBDMessageBuffer)>>(
          'CBDMessageBuffer_ReadUInt32');
  late final _CBDMessageBuffer_ReadUInt32 = _CBDMessageBuffer_ReadUInt32Ptr
      .asFunction<int Function(CBDMessageBuffer)>();

  int CBDMessageBuffer_ReadInt32(
    CBDMessageBuffer buffer,
  ) {
    return _CBDMessageBuffer_ReadInt32(
      buffer,
    );
  }

  late final _CBDMessageBuffer_ReadInt32Ptr =
      _lookup<ffi.NativeFunction<ffi.Int32 Function(CBDMessageBuffer)>>(
          'CBDMessageBuffer_ReadInt32');
  late final _CBDMessageBuffer_ReadInt32 = _CBDMessageBuffer_ReadInt32Ptr
      .asFunction<int Function(CBDMessageBuffer)>();

  int CBDMessageBuffer_ReadUInt64(
    CBDMessageBuffer buffer,
  ) {
    return _CBDMessageBuffer_ReadUInt64(
      buffer,
    );
  }

  late final _CBDMessageBuffer_ReadUInt64Ptr =
      _lookup<ffi.NativeFunction<ffi.Uint64 Function(CBDMessageBuffer)>>(
          'CBDMessageBuffer_ReadUInt64');
  late final _CBDMessageBuffer_ReadUInt64 = _CBDMessageBuffer_ReadUInt64Ptr
      .asFunction<int Function(CBDMessageBuffer)>();

  int CBDMessageBuffer_ReadInt64(
    CBDMessageBuffer buffer,
  ) {
    return _CBDMessageBuffer_ReadInt64(
      buffer,
    );
  }

  late final _CBDMessageBuffer_ReadInt64Ptr =
      _lookup<ffi.NativeFunction<ffi.Int64 Function(CBDMessageBuffer)>>(
          'CBDMessageBuffer_ReadInt64');
  late final _CBDMessageBuffer_ReadInt64 = _CBDMessageBuffer_ReadInt64Ptr
      .asFunction<int Function(CBDMessageBuffer)>();

  double CBDMessageBuffer_ReadFloat(
    CBDMessageBuffer buffer,
  ) {
    return _CBDMessageBuffer_ReadFloat(
      buffer,
    );
  }

  late final _CBDMessageBuffer_ReadFloatPtr =
      _lookup<ffi.NativeFunction<ffi.Float Function(CBDMessageBuffer)>>(
          'CBDMessageBuffer_ReadFloat');
  late final _CBDMessageBuffer_ReadFloat = _CBDMessageBuffer_ReadFloatPtr
      .asFunction<double Function(CBDMessageBuffer)>();

  double CBDMessageBuffer_ReadDouble(
    CBDMessageBuffer buffer,
  ) {
    return _CBDMessageBuffer_ReadDouble(
      buffer,
    );
  }

  late final _CBDMessageBuffer_ReadDoublePtr =
      _lookup<ffi.NativeFunction<ffi.Double Function(CBDMessageBuffer)>>(
          'CBDMessageBuffer_ReadDouble');
  late final _CBDMessageBuffer_ReadDouble = _CBDMessageBuffer_ReadDoublePtr
      .asFunction<double Function(CBDMessageBuffer)>();

  CBLSlice CBDMessageBuffer_ReadData(
    CBDMessageBuffer buffer,
  ) {
    return _CBDMessageBuffer_ReadData(
      buffer,
    );
  }

  late final _CBDMessageBuffer_ReadDataPtr =
      _lookup<ffi.NativeFunction<CBLSlice Function(CBDMessageBuffer)>>(
          'CBDMessageBuffer_ReadData');
  late final _CBDMessageBuffer_ReadData = _CBDMessageBuffer_ReadDataPtr
      .asFunction<CBLSlice Function(CBDMessageBuffer)>();

  CBDConnection CBDConnection_Create(
    int port,
  ) {
    return _CBDConnection_Create(
      port,
    );
  }

  late final _CBDConnection_CreatePtr =
      _lookup<ffi.NativeFunction<CBDConnection Function(Dart_Port_DL)>>(
          'CBDConnection_Create');
  late final _CBDConnection_Create =
      _CBDConnection_CreatePtr.asFunction<CBDConnection Function(int)>();

  void CBDConnection_Destroy(
    CBDConnection connection,
  ) {
    return _CBDConnection_Destroy(
      connection,
    );
  }

  late final _CBDConnection_DestroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(CBDConnection)>>(
          'CBDConnection_Destroy');
  late final _CBDConnection_Destroy =
      _CBDConnection_DestroyPtr.asFunction<void Function(CBDConnection)>();

  void CBDConnection_Open(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_Open(
      connection,
      request,
    );
  }

  late final _CBDConnection_OpenPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBDConnection_Open');
  late final _CBDConnection_Open = _CBDConnection_OpenPtr.asFunction<
      void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_Close(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_Close(
      connection,
      request,
    );
  }

  late final _CBDConnection_ClosePtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBDConnection_Close');
  late final _CBDConnection_Close = _CBDConnection_ClosePtr.asFunction<
      void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_OpenBucket(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_OpenBucket(
      connection,
      request,
    );
  }

  late final _CBDConnection_OpenBucketPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBDConnection_OpenBucket');
  late final _CBDConnection_OpenBucket = _CBDConnection_OpenBucketPtr
      .asFunction<void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_Prepend(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_Prepend(
      connection,
      request,
    );
  }

  late final _CBDConnection_PrependPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBDConnection_Prepend');
  late final _CBDConnection_Prepend = _CBDConnection_PrependPtr.asFunction<
      void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_Exists(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_Exists(
      connection,
      request,
    );
  }

  late final _CBDConnection_ExistsPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBDConnection_Exists');
  late final _CBDConnection_Exists = _CBDConnection_ExistsPtr.asFunction<
      void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_HttpNoop(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_HttpNoop(
      connection,
      request,
    );
  }

  late final _CBDConnection_HttpNoopPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBDConnection_HttpNoop');
  late final _CBDConnection_HttpNoop = _CBDConnection_HttpNoopPtr.asFunction<
      void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_Unlock(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_Unlock(
      connection,
      request,
    );
  }

  late final _CBDConnection_UnlockPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBDConnection_Unlock');
  late final _CBDConnection_Unlock = _CBDConnection_UnlockPtr.asFunction<
      void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_GetAllReplicas(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_GetAllReplicas(
      connection,
      request,
    );
  }

  late final _CBDConnection_GetAllReplicasPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBDConnection_GetAllReplicas');
  late final _CBDConnection_GetAllReplicas = _CBDConnection_GetAllReplicasPtr
      .asFunction<void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_Upsert(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_Upsert(
      connection,
      request,
    );
  }

  late final _CBDConnection_UpsertPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBDConnection_Upsert');
  late final _CBDConnection_Upsert = _CBDConnection_UpsertPtr.asFunction<
      void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_GetAnyReplica(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_GetAnyReplica(
      connection,
      request,
    );
  }

  late final _CBDConnection_GetAnyReplicaPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBDConnection_GetAnyReplica');
  late final _CBDConnection_GetAnyReplica = _CBDConnection_GetAnyReplicaPtr
      .asFunction<void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_Append(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_Append(
      connection,
      request,
    );
  }

  late final _CBDConnection_AppendPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBDConnection_Append');
  late final _CBDConnection_Append = _CBDConnection_AppendPtr.asFunction<
      void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_Query(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_Query(
      connection,
      request,
    );
  }

  late final _CBDConnection_QueryPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBDConnection_Query');
  late final _CBDConnection_Query = _CBDConnection_QueryPtr.asFunction<
      void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_McbpNoop(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_McbpNoop(
      connection,
      request,
    );
  }

  late final _CBDConnection_McbpNoopPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBDConnection_McbpNoop');
  late final _CBDConnection_McbpNoop = _CBDConnection_McbpNoopPtr.asFunction<
      void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_Replace(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_Replace(
      connection,
      request,
    );
  }

  late final _CBDConnection_ReplacePtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBDConnection_Replace');
  late final _CBDConnection_Replace = _CBDConnection_ReplacePtr.asFunction<
      void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_GetAndTouch(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_GetAndTouch(
      connection,
      request,
    );
  }

  late final _CBDConnection_GetAndTouchPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBDConnection_GetAndTouch');
  late final _CBDConnection_GetAndTouch = _CBDConnection_GetAndTouchPtr
      .asFunction<void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_Remove(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_Remove(
      connection,
      request,
    );
  }

  late final _CBDConnection_RemovePtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBDConnection_Remove');
  late final _CBDConnection_Remove = _CBDConnection_RemovePtr.asFunction<
      void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_Get(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_Get(
      connection,
      request,
    );
  }

  late final _CBDConnection_GetPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBDConnection_Get');
  late final _CBDConnection_Get = _CBDConnection_GetPtr.asFunction<
      void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_Analytics(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_Analytics(
      connection,
      request,
    );
  }

  late final _CBDConnection_AnalyticsPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBDConnection_Analytics');
  late final _CBDConnection_Analytics = _CBDConnection_AnalyticsPtr.asFunction<
      void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_GetProjected(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_GetProjected(
      connection,
      request,
    );
  }

  late final _CBDConnection_GetProjectedPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBDConnection_GetProjected');
  late final _CBDConnection_GetProjected = _CBDConnection_GetProjectedPtr
      .asFunction<void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_Decrement(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_Decrement(
      connection,
      request,
    );
  }

  late final _CBDConnection_DecrementPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBDConnection_Decrement');
  late final _CBDConnection_Decrement = _CBDConnection_DecrementPtr.asFunction<
      void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_Search(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_Search(
      connection,
      request,
    );
  }

  late final _CBDConnection_SearchPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBDConnection_Search');
  late final _CBDConnection_Search = _CBDConnection_SearchPtr.asFunction<
      void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_Touch(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_Touch(
      connection,
      request,
    );
  }

  late final _CBDConnection_TouchPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBDConnection_Touch');
  late final _CBDConnection_Touch = _CBDConnection_TouchPtr.asFunction<
      void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_LookupIn(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_LookupIn(
      connection,
      request,
    );
  }

  late final _CBDConnection_LookupInPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBDConnection_LookupIn');
  late final _CBDConnection_LookupIn = _CBDConnection_LookupInPtr.asFunction<
      void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_DocumentView(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_DocumentView(
      connection,
      request,
    );
  }

  late final _CBDConnection_DocumentViewPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBDConnection_DocumentView');
  late final _CBDConnection_DocumentView = _CBDConnection_DocumentViewPtr
      .asFunction<void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_GetAndLock(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_GetAndLock(
      connection,
      request,
    );
  }

  late final _CBDConnection_GetAndLockPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBDConnection_GetAndLock');
  late final _CBDConnection_GetAndLock = _CBDConnection_GetAndLockPtr
      .asFunction<void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_Insert(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_Insert(
      connection,
      request,
    );
  }

  late final _CBDConnection_InsertPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBDConnection_Insert');
  late final _CBDConnection_Insert = _CBDConnection_InsertPtr.asFunction<
      void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_MutateIn(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_MutateIn(
      connection,
      request,
    );
  }

  late final _CBDConnection_MutateInPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBDConnection_MutateIn');
  late final _CBDConnection_MutateIn = _CBDConnection_MutateInPtr.asFunction<
      void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_Increment(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_Increment(
      connection,
      request,
    );
  }

  late final _CBDConnection_IncrementPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBDConnection_Increment');
  late final _CBDConnection_Increment = _CBDConnection_IncrementPtr.asFunction<
      void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementGroupUpsert(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementGroupUpsert(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementGroupUpsertPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBDConnection_ManagementGroupUpsert');
  late final _CBDConnection_ManagementGroupUpsert =
      _CBDConnection_ManagementGroupUpsertPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementEventingPauseFunction(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementEventingPauseFunction(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementEventingPauseFunctionPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBDConnection_ManagementEventingPauseFunction');
  late final _CBDConnection_ManagementEventingPauseFunction =
      _CBDConnection_ManagementEventingPauseFunctionPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementQueryIndexGetAll(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementQueryIndexGetAll(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementQueryIndexGetAllPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBDConnection_ManagementQueryIndexGetAll');
  late final _CBDConnection_ManagementQueryIndexGetAll =
      _CBDConnection_ManagementQueryIndexGetAllPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementCollectionCreate(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementCollectionCreate(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementCollectionCreatePtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBDConnection_ManagementCollectionCreate');
  late final _CBDConnection_ManagementCollectionCreate =
      _CBDConnection_ManagementCollectionCreatePtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementEventingResumeFunction(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementEventingResumeFunction(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementEventingResumeFunctionPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBDConnection_ManagementEventingResumeFunction');
  late final _CBDConnection_ManagementEventingResumeFunction =
      _CBDConnection_ManagementEventingResumeFunctionPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementSearchIndexGetStats(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementSearchIndexGetStats(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementSearchIndexGetStatsPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBDConnection_ManagementSearchIndexGetStats');
  late final _CBDConnection_ManagementSearchIndexGetStats =
      _CBDConnection_ManagementSearchIndexGetStatsPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementBucketGetAll(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementBucketGetAll(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementBucketGetAllPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBDConnection_ManagementBucketGetAll');
  late final _CBDConnection_ManagementBucketGetAll =
      _CBDConnection_ManagementBucketGetAllPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementQueryIndexBuildDeferred(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementQueryIndexBuildDeferred(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementQueryIndexBuildDeferredPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBDConnection_ManagementQueryIndexBuildDeferred');
  late final _CBDConnection_ManagementQueryIndexBuildDeferred =
      _CBDConnection_ManagementQueryIndexBuildDeferredPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementClusterDescribe(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementClusterDescribe(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementClusterDescribePtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBDConnection_ManagementClusterDescribe');
  late final _CBDConnection_ManagementClusterDescribe =
      _CBDConnection_ManagementClusterDescribePtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementSearchIndexGetAll(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementSearchIndexGetAll(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementSearchIndexGetAllPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBDConnection_ManagementSearchIndexGetAll');
  late final _CBDConnection_ManagementSearchIndexGetAll =
      _CBDConnection_ManagementSearchIndexGetAllPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementSearchIndexAnalyzeDocument(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementSearchIndexAnalyzeDocument(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementSearchIndexAnalyzeDocumentPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBDConnection_ManagementSearchIndexAnalyzeDocument');
  late final _CBDConnection_ManagementSearchIndexAnalyzeDocument =
      _CBDConnection_ManagementSearchIndexAnalyzeDocumentPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementQueryIndexDrop(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementQueryIndexDrop(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementQueryIndexDropPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBDConnection_ManagementQueryIndexDrop');
  late final _CBDConnection_ManagementQueryIndexDrop =
      _CBDConnection_ManagementQueryIndexDropPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementAnalyticsDatasetCreate(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementAnalyticsDatasetCreate(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementAnalyticsDatasetCreatePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBDConnection_ManagementAnalyticsDatasetCreate');
  late final _CBDConnection_ManagementAnalyticsDatasetCreate =
      _CBDConnection_ManagementAnalyticsDatasetCreatePtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementBucketFlush(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementBucketFlush(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementBucketFlushPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBDConnection_ManagementBucketFlush');
  late final _CBDConnection_ManagementBucketFlush =
      _CBDConnection_ManagementBucketFlushPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementAnalyticsIndexDrop(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementAnalyticsIndexDrop(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementAnalyticsIndexDropPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBDConnection_ManagementAnalyticsIndexDrop');
  late final _CBDConnection_ManagementAnalyticsIndexDrop =
      _CBDConnection_ManagementAnalyticsIndexDropPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementQueryIndexCreate(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementQueryIndexCreate(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementQueryIndexCreatePtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBDConnection_ManagementQueryIndexCreate');
  late final _CBDConnection_ManagementQueryIndexCreate =
      _CBDConnection_ManagementQueryIndexCreatePtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementSearchIndexUpsert(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementSearchIndexUpsert(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementSearchIndexUpsertPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBDConnection_ManagementSearchIndexUpsert');
  late final _CBDConnection_ManagementSearchIndexUpsert =
      _CBDConnection_ManagementSearchIndexUpsertPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementAnalyticsDatasetGetAll(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementAnalyticsDatasetGetAll(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementAnalyticsDatasetGetAllPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBDConnection_ManagementAnalyticsDatasetGetAll');
  late final _CBDConnection_ManagementAnalyticsDatasetGetAll =
      _CBDConnection_ManagementAnalyticsDatasetGetAllPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementAnalyticsIndexGetAll(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementAnalyticsIndexGetAll(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementAnalyticsIndexGetAllPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBDConnection_ManagementAnalyticsIndexGetAll');
  late final _CBDConnection_ManagementAnalyticsIndexGetAll =
      _CBDConnection_ManagementAnalyticsIndexGetAllPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementAnalyticsGetPendingMutations(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementAnalyticsGetPendingMutations(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementAnalyticsGetPendingMutationsPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBDConnection_ManagementAnalyticsGetPendingMutations');
  late final _CBDConnection_ManagementAnalyticsGetPendingMutations =
      _CBDConnection_ManagementAnalyticsGetPendingMutationsPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementAnalyticsDataverseDrop(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementAnalyticsDataverseDrop(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementAnalyticsDataverseDropPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBDConnection_ManagementAnalyticsDataverseDrop');
  late final _CBDConnection_ManagementAnalyticsDataverseDrop =
      _CBDConnection_ManagementAnalyticsDataverseDropPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementAnalyticsLinkConnect(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementAnalyticsLinkConnect(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementAnalyticsLinkConnectPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBDConnection_ManagementAnalyticsLinkConnect');
  late final _CBDConnection_ManagementAnalyticsLinkConnect =
      _CBDConnection_ManagementAnalyticsLinkConnectPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementCollectionsManifestGet(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementCollectionsManifestGet(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementCollectionsManifestGetPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBDConnection_ManagementCollectionsManifestGet');
  late final _CBDConnection_ManagementCollectionsManifestGet =
      _CBDConnection_ManagementCollectionsManifestGetPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementChangePassword(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementChangePassword(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementChangePasswordPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBDConnection_ManagementChangePassword');
  late final _CBDConnection_ManagementChangePassword =
      _CBDConnection_ManagementChangePasswordPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementClusterDeveloperPreviewEnable(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementClusterDeveloperPreviewEnable(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementClusterDeveloperPreviewEnablePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
          'CBDConnection_ManagementClusterDeveloperPreviewEnable');
  late final _CBDConnection_ManagementClusterDeveloperPreviewEnable =
      _CBDConnection_ManagementClusterDeveloperPreviewEnablePtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementAnalyticsLinkDrop(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementAnalyticsLinkDrop(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementAnalyticsLinkDropPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBDConnection_ManagementAnalyticsLinkDrop');
  late final _CBDConnection_ManagementAnalyticsLinkDrop =
      _CBDConnection_ManagementAnalyticsLinkDropPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementBucketDescribe(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementBucketDescribe(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementBucketDescribePtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBDConnection_ManagementBucketDescribe');
  late final _CBDConnection_ManagementBucketDescribe =
      _CBDConnection_ManagementBucketDescribePtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementEventingUpsertFunction(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementEventingUpsertFunction(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementEventingUpsertFunctionPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBDConnection_ManagementEventingUpsertFunction');
  late final _CBDConnection_ManagementEventingUpsertFunction =
      _CBDConnection_ManagementEventingUpsertFunctionPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementViewIndexGetAll(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementViewIndexGetAll(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementViewIndexGetAllPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBDConnection_ManagementViewIndexGetAll');
  late final _CBDConnection_ManagementViewIndexGetAll =
      _CBDConnection_ManagementViewIndexGetAllPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementBucketGet(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementBucketGet(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementBucketGetPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBDConnection_ManagementBucketGet');
  late final _CBDConnection_ManagementBucketGet =
      _CBDConnection_ManagementBucketGetPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementBucketUpdate(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementBucketUpdate(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementBucketUpdatePtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBDConnection_ManagementBucketUpdate');
  late final _CBDConnection_ManagementBucketUpdate =
      _CBDConnection_ManagementBucketUpdatePtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementBucketDrop(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementBucketDrop(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementBucketDropPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBDConnection_ManagementBucketDrop');
  late final _CBDConnection_ManagementBucketDrop =
      _CBDConnection_ManagementBucketDropPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementFreeform(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementFreeform(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementFreeformPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBDConnection_ManagementFreeform');
  late final _CBDConnection_ManagementFreeform =
      _CBDConnection_ManagementFreeformPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementScopeDrop(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementScopeDrop(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementScopeDropPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBDConnection_ManagementScopeDrop');
  late final _CBDConnection_ManagementScopeDrop =
      _CBDConnection_ManagementScopeDropPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementViewIndexUpsert(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementViewIndexUpsert(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementViewIndexUpsertPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBDConnection_ManagementViewIndexUpsert');
  late final _CBDConnection_ManagementViewIndexUpsert =
      _CBDConnection_ManagementViewIndexUpsertPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementUserGetAll(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementUserGetAll(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementUserGetAllPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBDConnection_ManagementUserGetAll');
  late final _CBDConnection_ManagementUserGetAll =
      _CBDConnection_ManagementUserGetAllPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementScopeCreate(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementScopeCreate(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementScopeCreatePtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBDConnection_ManagementScopeCreate');
  late final _CBDConnection_ManagementScopeCreate =
      _CBDConnection_ManagementScopeCreatePtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementEventingGetFunction(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementEventingGetFunction(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementEventingGetFunctionPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBDConnection_ManagementEventingGetFunction');
  late final _CBDConnection_ManagementEventingGetFunction =
      _CBDConnection_ManagementEventingGetFunctionPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementViewIndexDrop(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementViewIndexDrop(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementViewIndexDropPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBDConnection_ManagementViewIndexDrop');
  late final _CBDConnection_ManagementViewIndexDrop =
      _CBDConnection_ManagementViewIndexDropPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementAnalyticsLinkDisconnect(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementAnalyticsLinkDisconnect(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementAnalyticsLinkDisconnectPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBDConnection_ManagementAnalyticsLinkDisconnect');
  late final _CBDConnection_ManagementAnalyticsLinkDisconnect =
      _CBDConnection_ManagementAnalyticsLinkDisconnectPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementUserUpsert(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementUserUpsert(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementUserUpsertPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBDConnection_ManagementUserUpsert');
  late final _CBDConnection_ManagementUserUpsert =
      _CBDConnection_ManagementUserUpsertPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementEventingGetStatus(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementEventingGetStatus(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementEventingGetStatusPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBDConnection_ManagementEventingGetStatus');
  late final _CBDConnection_ManagementEventingGetStatus =
      _CBDConnection_ManagementEventingGetStatusPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementEventingGetAllFunctions(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementEventingGetAllFunctions(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementEventingGetAllFunctionsPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBDConnection_ManagementEventingGetAllFunctions');
  late final _CBDConnection_ManagementEventingGetAllFunctions =
      _CBDConnection_ManagementEventingGetAllFunctionsPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementAnalyticsIndexCreate(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementAnalyticsIndexCreate(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementAnalyticsIndexCreatePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBDConnection_ManagementAnalyticsIndexCreate');
  late final _CBDConnection_ManagementAnalyticsIndexCreate =
      _CBDConnection_ManagementAnalyticsIndexCreatePtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementScopeGetAll(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementScopeGetAll(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementScopeGetAllPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBDConnection_ManagementScopeGetAll');
  late final _CBDConnection_ManagementScopeGetAll =
      _CBDConnection_ManagementScopeGetAllPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementUserGet(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementUserGet(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementUserGetPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBDConnection_ManagementUserGet');
  late final _CBDConnection_ManagementUserGet =
      _CBDConnection_ManagementUserGetPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementSearchIndexDrop(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementSearchIndexDrop(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementSearchIndexDropPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBDConnection_ManagementSearchIndexDrop');
  late final _CBDConnection_ManagementSearchIndexDrop =
      _CBDConnection_ManagementSearchIndexDropPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementSearchIndexControlPlanFreeze(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementSearchIndexControlPlanFreeze(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementSearchIndexControlPlanFreezePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBDConnection_ManagementSearchIndexControlPlanFreeze');
  late final _CBDConnection_ManagementSearchIndexControlPlanFreeze =
      _CBDConnection_ManagementSearchIndexControlPlanFreezePtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementSearchIndexStats(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementSearchIndexStats(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementSearchIndexStatsPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBDConnection_ManagementSearchIndexStats');
  late final _CBDConnection_ManagementSearchIndexStats =
      _CBDConnection_ManagementSearchIndexStatsPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementUserDrop(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementUserDrop(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementUserDropPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBDConnection_ManagementUserDrop');
  late final _CBDConnection_ManagementUserDrop =
      _CBDConnection_ManagementUserDropPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementAnalyticsDataverseCreate(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementAnalyticsDataverseCreate(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementAnalyticsDataverseCreatePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBDConnection_ManagementAnalyticsDataverseCreate');
  late final _CBDConnection_ManagementAnalyticsDataverseCreate =
      _CBDConnection_ManagementAnalyticsDataverseCreatePtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementSearchIndexControlQuery(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementSearchIndexControlQuery(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementSearchIndexControlQueryPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBDConnection_ManagementSearchIndexControlQuery');
  late final _CBDConnection_ManagementSearchIndexControlQuery =
      _CBDConnection_ManagementSearchIndexControlQueryPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementRoleGetAll(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementRoleGetAll(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementRoleGetAllPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBDConnection_ManagementRoleGetAll');
  late final _CBDConnection_ManagementRoleGetAll =
      _CBDConnection_ManagementRoleGetAllPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementGroupGetAll(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementGroupGetAll(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementGroupGetAllPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBDConnection_ManagementGroupGetAll');
  late final _CBDConnection_ManagementGroupGetAll =
      _CBDConnection_ManagementGroupGetAllPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementEventingDropFunction(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementEventingDropFunction(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementEventingDropFunctionPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBDConnection_ManagementEventingDropFunction');
  late final _CBDConnection_ManagementEventingDropFunction =
      _CBDConnection_ManagementEventingDropFunctionPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementCollectionDrop(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementCollectionDrop(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementCollectionDropPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBDConnection_ManagementCollectionDrop');
  late final _CBDConnection_ManagementCollectionDrop =
      _CBDConnection_ManagementCollectionDropPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementSearchIndexControlIngest(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementSearchIndexControlIngest(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementSearchIndexControlIngestPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBDConnection_ManagementSearchIndexControlIngest');
  late final _CBDConnection_ManagementSearchIndexControlIngest =
      _CBDConnection_ManagementSearchIndexControlIngestPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementEventingDeployFunction(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementEventingDeployFunction(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementEventingDeployFunctionPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBDConnection_ManagementEventingDeployFunction');
  late final _CBDConnection_ManagementEventingDeployFunction =
      _CBDConnection_ManagementEventingDeployFunctionPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementGroupGet(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementGroupGet(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementGroupGetPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBDConnection_ManagementGroupGet');
  late final _CBDConnection_ManagementGroupGet =
      _CBDConnection_ManagementGroupGetPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementViewIndexGet(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementViewIndexGet(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementViewIndexGetPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBDConnection_ManagementViewIndexGet');
  late final _CBDConnection_ManagementViewIndexGet =
      _CBDConnection_ManagementViewIndexGetPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementBucketCreate(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementBucketCreate(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementBucketCreatePtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBDConnection_ManagementBucketCreate');
  late final _CBDConnection_ManagementBucketCreate =
      _CBDConnection_ManagementBucketCreatePtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementAnalyticsDatasetDrop(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementAnalyticsDatasetDrop(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementAnalyticsDatasetDropPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBDConnection_ManagementAnalyticsDatasetDrop');
  late final _CBDConnection_ManagementAnalyticsDatasetDrop =
      _CBDConnection_ManagementAnalyticsDatasetDropPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementGroupDrop(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementGroupDrop(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementGroupDropPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBDConnection_ManagementGroupDrop');
  late final _CBDConnection_ManagementGroupDrop =
      _CBDConnection_ManagementGroupDropPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementSearchIndexGet(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementSearchIndexGet(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementSearchIndexGetPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBDConnection_ManagementSearchIndexGet');
  late final _CBDConnection_ManagementSearchIndexGet =
      _CBDConnection_ManagementSearchIndexGetPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementQueryIndexGetAllDeferred(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementQueryIndexGetAllDeferred(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementQueryIndexGetAllDeferredPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBDConnection_ManagementQueryIndexGetAllDeferred');
  late final _CBDConnection_ManagementQueryIndexGetAllDeferred =
      _CBDConnection_ManagementQueryIndexGetAllDeferredPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementQueryIndexBuild(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementQueryIndexBuild(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementQueryIndexBuildPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBDConnection_ManagementQueryIndexBuild');
  late final _CBDConnection_ManagementQueryIndexBuild =
      _CBDConnection_ManagementQueryIndexBuildPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementEventingUndeployFunction(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementEventingUndeployFunction(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementEventingUndeployFunctionPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBDConnection_ManagementEventingUndeployFunction');
  late final _CBDConnection_ManagementEventingUndeployFunction =
      _CBDConnection_ManagementEventingUndeployFunctionPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementSearchIndexGetDocumentsCount(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementSearchIndexGetDocumentsCount(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementSearchIndexGetDocumentsCountPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBDConnection_ManagementSearchIndexGetDocumentsCount');
  late final _CBDConnection_ManagementSearchIndexGetDocumentsCount =
      _CBDConnection_ManagementSearchIndexGetDocumentsCountPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_ManagementAnalyticsLinkGetAll(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_ManagementAnalyticsLinkGetAll(
      connection,
      request,
    );
  }

  late final _CBDConnection_ManagementAnalyticsLinkGetAllPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBDConnection_ManagementAnalyticsLinkGetAll');
  late final _CBDConnection_ManagementAnalyticsLinkGetAll =
      _CBDConnection_ManagementAnalyticsLinkGetAllPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  bool CBD_Init(
    ffi.Pointer<ffi.Void> data,
  ) {
    return _CBD_Init(
      data,
    );
  }

  late final _CBD_InitPtr =
      _lookup<ffi.NativeFunction<ffi.Bool Function(ffi.Pointer<ffi.Void>)>>(
          'CBD_Init');
  late final _CBD_Init =
      _CBD_InitPtr.asFunction<bool Function(ffi.Pointer<ffi.Void>)>();

  late final addresses = _SymbolAddresses(this);
}

class _SymbolAddresses {
  final LibCouchbaseDart _library;
  _SymbolAddresses(this._library);
  ffi.Pointer<ffi.NativeFunction<CBDMessageBuffer Function(ffi.Size)>>
      get CBDMessageBuffer_Create => _library._CBDMessageBuffer_CreatePtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer)>>
      get CBDMessageBuffer_Destroy => _library._CBDMessageBuffer_DestroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer)>>
      get CBDMessageBuffer_Reset => _library._CBDMessageBuffer_ResetPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer, ffi.Bool)>>
      get CBDMessageBuffer_WriteBool => _library._CBDMessageBuffer_WriteBoolPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer, ffi.Uint8)>>
      get CBDMessageBuffer_WriteUInt8 =>
          _library._CBDMessageBuffer_WriteUInt8Ptr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer, ffi.Int8)>>
      get CBDMessageBuffer_WriteInt8 => _library._CBDMessageBuffer_WriteInt8Ptr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer, ffi.Uint16)>>
      get CBDMessageBuffer_WriteUInt16 =>
          _library._CBDMessageBuffer_WriteUInt16Ptr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer, ffi.Int16)>>
      get CBDMessageBuffer_WriteInt16 =>
          _library._CBDMessageBuffer_WriteInt16Ptr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer, ffi.Uint32)>>
      get CBDMessageBuffer_WriteUInt32 =>
          _library._CBDMessageBuffer_WriteUInt32Ptr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer, ffi.Int32)>>
      get CBDMessageBuffer_WriteInt32 =>
          _library._CBDMessageBuffer_WriteInt32Ptr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer, ffi.Uint64)>>
      get CBDMessageBuffer_WriteUInt64 =>
          _library._CBDMessageBuffer_WriteUInt64Ptr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer, ffi.Int64)>>
      get CBDMessageBuffer_WriteInt64 =>
          _library._CBDMessageBuffer_WriteInt64Ptr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer, ffi.Float)>>
      get CBDMessageBuffer_WriteFloat =>
          _library._CBDMessageBuffer_WriteFloatPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer, ffi.Double)>>
      get CBDMessageBuffer_WriteDouble =>
          _library._CBDMessageBuffer_WriteDoublePtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(CBDMessageBuffer, ffi.Size)>>
      get CBDMessageBuffer_Allocate => _library._CBDMessageBuffer_AllocatePtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Bool Function(CBDMessageBuffer)>>
      get CBDMessageBuffer_ReadBool => _library._CBDMessageBuffer_ReadBoolPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Uint8 Function(CBDMessageBuffer)>>
      get CBDMessageBuffer_ReadUInt8 => _library._CBDMessageBuffer_ReadUInt8Ptr;
  ffi.Pointer<ffi.NativeFunction<ffi.Int8 Function(CBDMessageBuffer)>>
      get CBDMessageBuffer_ReadInt8 => _library._CBDMessageBuffer_ReadInt8Ptr;
  ffi.Pointer<ffi.NativeFunction<ffi.Uint16 Function(CBDMessageBuffer)>>
      get CBDMessageBuffer_ReadUInt16 =>
          _library._CBDMessageBuffer_ReadUInt16Ptr;
  ffi.Pointer<ffi.NativeFunction<ffi.Int16 Function(CBDMessageBuffer)>>
      get CBDMessageBuffer_ReadInt16 => _library._CBDMessageBuffer_ReadInt16Ptr;
  ffi.Pointer<ffi.NativeFunction<ffi.Uint32 Function(CBDMessageBuffer)>>
      get CBDMessageBuffer_ReadUInt32 =>
          _library._CBDMessageBuffer_ReadUInt32Ptr;
  ffi.Pointer<ffi.NativeFunction<ffi.Int32 Function(CBDMessageBuffer)>>
      get CBDMessageBuffer_ReadInt32 => _library._CBDMessageBuffer_ReadInt32Ptr;
  ffi.Pointer<ffi.NativeFunction<ffi.Uint64 Function(CBDMessageBuffer)>>
      get CBDMessageBuffer_ReadUInt64 =>
          _library._CBDMessageBuffer_ReadUInt64Ptr;
  ffi.Pointer<ffi.NativeFunction<ffi.Int64 Function(CBDMessageBuffer)>>
      get CBDMessageBuffer_ReadInt64 => _library._CBDMessageBuffer_ReadInt64Ptr;
  ffi.Pointer<ffi.NativeFunction<ffi.Float Function(CBDMessageBuffer)>>
      get CBDMessageBuffer_ReadFloat => _library._CBDMessageBuffer_ReadFloatPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Double Function(CBDMessageBuffer)>>
      get CBDMessageBuffer_ReadDouble =>
          _library._CBDMessageBuffer_ReadDoublePtr;
  ffi.Pointer<ffi.NativeFunction<CBLSlice Function(CBDMessageBuffer)>>
      get CBDMessageBuffer_ReadData => _library._CBDMessageBuffer_ReadDataPtr;
  ffi.Pointer<ffi.NativeFunction<CBDConnection Function(Dart_Port_DL)>>
      get CBDConnection_Create => _library._CBDConnection_CreatePtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(CBDConnection)>>
      get CBDConnection_Destroy => _library._CBDConnection_DestroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_Open => _library._CBDConnection_OpenPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_Close => _library._CBDConnection_ClosePtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_OpenBucket => _library._CBDConnection_OpenBucketPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_Prepend => _library._CBDConnection_PrependPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_Exists => _library._CBDConnection_ExistsPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_HttpNoop => _library._CBDConnection_HttpNoopPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_Unlock => _library._CBDConnection_UnlockPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_GetAllReplicas =>
          _library._CBDConnection_GetAllReplicasPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_Upsert => _library._CBDConnection_UpsertPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_GetAnyReplica =>
          _library._CBDConnection_GetAnyReplicaPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_Append => _library._CBDConnection_AppendPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_Query => _library._CBDConnection_QueryPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_McbpNoop => _library._CBDConnection_McbpNoopPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_Replace => _library._CBDConnection_ReplacePtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_GetAndTouch => _library._CBDConnection_GetAndTouchPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_Remove => _library._CBDConnection_RemovePtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_Get => _library._CBDConnection_GetPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_Analytics => _library._CBDConnection_AnalyticsPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_GetProjected => _library._CBDConnection_GetProjectedPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_Decrement => _library._CBDConnection_DecrementPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_Search => _library._CBDConnection_SearchPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_Touch => _library._CBDConnection_TouchPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_LookupIn => _library._CBDConnection_LookupInPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_DocumentView => _library._CBDConnection_DocumentViewPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_GetAndLock => _library._CBDConnection_GetAndLockPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_Insert => _library._CBDConnection_InsertPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_MutateIn => _library._CBDConnection_MutateInPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_Increment => _library._CBDConnection_IncrementPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementGroupUpsert =>
          _library._CBDConnection_ManagementGroupUpsertPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementEventingPauseFunction =>
          _library._CBDConnection_ManagementEventingPauseFunctionPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementQueryIndexGetAll =>
          _library._CBDConnection_ManagementQueryIndexGetAllPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementCollectionCreate =>
          _library._CBDConnection_ManagementCollectionCreatePtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementEventingResumeFunction =>
          _library._CBDConnection_ManagementEventingResumeFunctionPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementSearchIndexGetStats =>
          _library._CBDConnection_ManagementSearchIndexGetStatsPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementBucketGetAll =>
          _library._CBDConnection_ManagementBucketGetAllPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementQueryIndexBuildDeferred =>
          _library._CBDConnection_ManagementQueryIndexBuildDeferredPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementClusterDescribe =>
          _library._CBDConnection_ManagementClusterDescribePtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementSearchIndexGetAll =>
          _library._CBDConnection_ManagementSearchIndexGetAllPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementSearchIndexAnalyzeDocument =>
          _library._CBDConnection_ManagementSearchIndexAnalyzeDocumentPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementQueryIndexDrop =>
          _library._CBDConnection_ManagementQueryIndexDropPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementAnalyticsDatasetCreate =>
          _library._CBDConnection_ManagementAnalyticsDatasetCreatePtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementBucketFlush =>
          _library._CBDConnection_ManagementBucketFlushPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementAnalyticsIndexDrop =>
          _library._CBDConnection_ManagementAnalyticsIndexDropPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementQueryIndexCreate =>
          _library._CBDConnection_ManagementQueryIndexCreatePtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementSearchIndexUpsert =>
          _library._CBDConnection_ManagementSearchIndexUpsertPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementAnalyticsDatasetGetAll =>
          _library._CBDConnection_ManagementAnalyticsDatasetGetAllPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementAnalyticsIndexGetAll =>
          _library._CBDConnection_ManagementAnalyticsIndexGetAllPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementAnalyticsGetPendingMutations =>
          _library._CBDConnection_ManagementAnalyticsGetPendingMutationsPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementAnalyticsDataverseDrop =>
          _library._CBDConnection_ManagementAnalyticsDataverseDropPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementAnalyticsLinkConnect =>
          _library._CBDConnection_ManagementAnalyticsLinkConnectPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementCollectionsManifestGet =>
          _library._CBDConnection_ManagementCollectionsManifestGetPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementChangePassword =>
          _library._CBDConnection_ManagementChangePasswordPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementClusterDeveloperPreviewEnable =>
          _library._CBDConnection_ManagementClusterDeveloperPreviewEnablePtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementAnalyticsLinkDrop =>
          _library._CBDConnection_ManagementAnalyticsLinkDropPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementBucketDescribe =>
          _library._CBDConnection_ManagementBucketDescribePtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementEventingUpsertFunction =>
          _library._CBDConnection_ManagementEventingUpsertFunctionPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementViewIndexGetAll =>
          _library._CBDConnection_ManagementViewIndexGetAllPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementBucketGet =>
          _library._CBDConnection_ManagementBucketGetPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementBucketUpdate =>
          _library._CBDConnection_ManagementBucketUpdatePtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementBucketDrop =>
          _library._CBDConnection_ManagementBucketDropPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementFreeform =>
          _library._CBDConnection_ManagementFreeformPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementScopeDrop =>
          _library._CBDConnection_ManagementScopeDropPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementViewIndexUpsert =>
          _library._CBDConnection_ManagementViewIndexUpsertPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementUserGetAll =>
          _library._CBDConnection_ManagementUserGetAllPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementScopeCreate =>
          _library._CBDConnection_ManagementScopeCreatePtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementEventingGetFunction =>
          _library._CBDConnection_ManagementEventingGetFunctionPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementViewIndexDrop =>
          _library._CBDConnection_ManagementViewIndexDropPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementAnalyticsLinkDisconnect =>
          _library._CBDConnection_ManagementAnalyticsLinkDisconnectPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementUserUpsert =>
          _library._CBDConnection_ManagementUserUpsertPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementEventingGetStatus =>
          _library._CBDConnection_ManagementEventingGetStatusPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementEventingGetAllFunctions =>
          _library._CBDConnection_ManagementEventingGetAllFunctionsPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementAnalyticsIndexCreate =>
          _library._CBDConnection_ManagementAnalyticsIndexCreatePtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementScopeGetAll =>
          _library._CBDConnection_ManagementScopeGetAllPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementUserGet =>
          _library._CBDConnection_ManagementUserGetPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementSearchIndexDrop =>
          _library._CBDConnection_ManagementSearchIndexDropPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementSearchIndexControlPlanFreeze =>
          _library._CBDConnection_ManagementSearchIndexControlPlanFreezePtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementSearchIndexStats =>
          _library._CBDConnection_ManagementSearchIndexStatsPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementUserDrop =>
          _library._CBDConnection_ManagementUserDropPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementAnalyticsDataverseCreate =>
          _library._CBDConnection_ManagementAnalyticsDataverseCreatePtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementSearchIndexControlQuery =>
          _library._CBDConnection_ManagementSearchIndexControlQueryPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementRoleGetAll =>
          _library._CBDConnection_ManagementRoleGetAllPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementGroupGetAll =>
          _library._CBDConnection_ManagementGroupGetAllPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementEventingDropFunction =>
          _library._CBDConnection_ManagementEventingDropFunctionPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementCollectionDrop =>
          _library._CBDConnection_ManagementCollectionDropPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementSearchIndexControlIngest =>
          _library._CBDConnection_ManagementSearchIndexControlIngestPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementEventingDeployFunction =>
          _library._CBDConnection_ManagementEventingDeployFunctionPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementGroupGet =>
          _library._CBDConnection_ManagementGroupGetPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementViewIndexGet =>
          _library._CBDConnection_ManagementViewIndexGetPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementBucketCreate =>
          _library._CBDConnection_ManagementBucketCreatePtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementAnalyticsDatasetDrop =>
          _library._CBDConnection_ManagementAnalyticsDatasetDropPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementGroupDrop =>
          _library._CBDConnection_ManagementGroupDropPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementSearchIndexGet =>
          _library._CBDConnection_ManagementSearchIndexGetPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementQueryIndexGetAllDeferred =>
          _library._CBDConnection_ManagementQueryIndexGetAllDeferredPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementQueryIndexBuild =>
          _library._CBDConnection_ManagementQueryIndexBuildPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementEventingUndeployFunction =>
          _library._CBDConnection_ManagementEventingUndeployFunctionPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementSearchIndexGetDocumentsCount =>
          _library._CBDConnection_ManagementSearchIndexGetDocumentsCountPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_ManagementAnalyticsLinkGetAll =>
          _library._CBDConnection_ManagementAnalyticsLinkGetAllPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Bool Function(ffi.Pointer<ffi.Void>)>>
      get CBD_Init => _library._CBD_InitPtr;
}

class CBLSlice extends ffi.Struct {
  external ffi.Pointer<ffi.Void> data;

  @ffi.Size()
  external int length;
}

class CBDMessageBuffer_ extends ffi.Opaque {}

typedef CBDMessageBuffer = ffi.Pointer<CBDMessageBuffer_>;

class CBDConnection_ extends ffi.Opaque {}

typedef CBDConnection = ffi.Pointer<CBDConnection_>;
typedef Dart_Port_DL = ffi.Int64;
