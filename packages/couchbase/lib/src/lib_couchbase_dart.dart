// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint
import 'dart:ffi' as ffi;

/// Bindings for libCouchbaseDart
class LibCouchbaseDart {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  LibCouchbaseDart(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  LibCouchbaseDart.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  CBDMessageBuffer CBDMessageBuffer_Create(
    int initialCapacity,
  ) {
    return _CBDMessageBuffer_Create(
      initialCapacity,
    );
  }

  late final _CBDMessageBuffer_CreatePtr =
      _lookup<ffi.NativeFunction<CBDMessageBuffer Function(ffi.Size)>>(
          'CBDMessageBuffer_Create');
  late final _CBDMessageBuffer_Create =
      _CBDMessageBuffer_CreatePtr.asFunction<CBDMessageBuffer Function(int)>();

  void CBDMessageBuffer_Destroy(
    CBDMessageBuffer buffer,
  ) {
    return _CBDMessageBuffer_Destroy(
      buffer,
    );
  }

  late final _CBDMessageBuffer_DestroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer)>>(
          'CBDMessageBuffer_Destroy');
  late final _CBDMessageBuffer_Destroy = _CBDMessageBuffer_DestroyPtr
      .asFunction<void Function(CBDMessageBuffer)>();

  void CBDMessageBuffer_Reset(
    CBDMessageBuffer buffer,
  ) {
    return _CBDMessageBuffer_Reset(
      buffer,
    );
  }

  late final _CBDMessageBuffer_ResetPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer)>>(
          'CBDMessageBuffer_Reset');
  late final _CBDMessageBuffer_Reset =
      _CBDMessageBuffer_ResetPtr.asFunction<void Function(CBDMessageBuffer)>();

  void CBDMessageBuffer_WriteBool(
    CBDMessageBuffer buffer,
    bool value,
  ) {
    return _CBDMessageBuffer_WriteBool(
      buffer,
      value,
    );
  }

  late final _CBDMessageBuffer_WriteBoolPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer, ffi.Bool)>>(
      'CBDMessageBuffer_WriteBool');
  late final _CBDMessageBuffer_WriteBool = _CBDMessageBuffer_WriteBoolPtr
      .asFunction<void Function(CBDMessageBuffer, bool)>();

  void CBDMessageBuffer_WriteUInt8(
    CBDMessageBuffer buffer,
    int value,
  ) {
    return _CBDMessageBuffer_WriteUInt8(
      buffer,
      value,
    );
  }

  late final _CBDMessageBuffer_WriteUInt8Ptr = _lookup<
          ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer, ffi.Uint8)>>(
      'CBDMessageBuffer_WriteUInt8');
  late final _CBDMessageBuffer_WriteUInt8 = _CBDMessageBuffer_WriteUInt8Ptr
      .asFunction<void Function(CBDMessageBuffer, int)>();

  void CBDMessageBuffer_WriteInt8(
    CBDMessageBuffer buffer,
    int value,
  ) {
    return _CBDMessageBuffer_WriteInt8(
      buffer,
      value,
    );
  }

  late final _CBDMessageBuffer_WriteInt8Ptr = _lookup<
          ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer, ffi.Int8)>>(
      'CBDMessageBuffer_WriteInt8');
  late final _CBDMessageBuffer_WriteInt8 = _CBDMessageBuffer_WriteInt8Ptr
      .asFunction<void Function(CBDMessageBuffer, int)>();

  void CBDMessageBuffer_WriteUInt16(
    CBDMessageBuffer buffer,
    int value,
  ) {
    return _CBDMessageBuffer_WriteUInt16(
      buffer,
      value,
    );
  }

  late final _CBDMessageBuffer_WriteUInt16Ptr = _lookup<
          ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer, ffi.Uint16)>>(
      'CBDMessageBuffer_WriteUInt16');
  late final _CBDMessageBuffer_WriteUInt16 = _CBDMessageBuffer_WriteUInt16Ptr
      .asFunction<void Function(CBDMessageBuffer, int)>();

  void CBDMessageBuffer_WriteInt16(
    CBDMessageBuffer buffer,
    int value,
  ) {
    return _CBDMessageBuffer_WriteInt16(
      buffer,
      value,
    );
  }

  late final _CBDMessageBuffer_WriteInt16Ptr = _lookup<
          ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer, ffi.Int16)>>(
      'CBDMessageBuffer_WriteInt16');
  late final _CBDMessageBuffer_WriteInt16 = _CBDMessageBuffer_WriteInt16Ptr
      .asFunction<void Function(CBDMessageBuffer, int)>();

  void CBDMessageBuffer_WriteUInt32(
    CBDMessageBuffer buffer,
    int value,
  ) {
    return _CBDMessageBuffer_WriteUInt32(
      buffer,
      value,
    );
  }

  late final _CBDMessageBuffer_WriteUInt32Ptr = _lookup<
          ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer, ffi.Uint32)>>(
      'CBDMessageBuffer_WriteUInt32');
  late final _CBDMessageBuffer_WriteUInt32 = _CBDMessageBuffer_WriteUInt32Ptr
      .asFunction<void Function(CBDMessageBuffer, int)>();

  void CBDMessageBuffer_WriteInt32(
    CBDMessageBuffer buffer,
    int value,
  ) {
    return _CBDMessageBuffer_WriteInt32(
      buffer,
      value,
    );
  }

  late final _CBDMessageBuffer_WriteInt32Ptr = _lookup<
          ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer, ffi.Int32)>>(
      'CBDMessageBuffer_WriteInt32');
  late final _CBDMessageBuffer_WriteInt32 = _CBDMessageBuffer_WriteInt32Ptr
      .asFunction<void Function(CBDMessageBuffer, int)>();

  void CBDMessageBuffer_WriteUInt64(
    CBDMessageBuffer buffer,
    int value,
  ) {
    return _CBDMessageBuffer_WriteUInt64(
      buffer,
      value,
    );
  }

  late final _CBDMessageBuffer_WriteUInt64Ptr = _lookup<
          ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer, ffi.Uint64)>>(
      'CBDMessageBuffer_WriteUInt64');
  late final _CBDMessageBuffer_WriteUInt64 = _CBDMessageBuffer_WriteUInt64Ptr
      .asFunction<void Function(CBDMessageBuffer, int)>();

  void CBDMessageBuffer_WriteInt64(
    CBDMessageBuffer buffer,
    int value,
  ) {
    return _CBDMessageBuffer_WriteInt64(
      buffer,
      value,
    );
  }

  late final _CBDMessageBuffer_WriteInt64Ptr = _lookup<
          ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer, ffi.Int64)>>(
      'CBDMessageBuffer_WriteInt64');
  late final _CBDMessageBuffer_WriteInt64 = _CBDMessageBuffer_WriteInt64Ptr
      .asFunction<void Function(CBDMessageBuffer, int)>();

  void CBDMessageBuffer_WriteFloat(
    CBDMessageBuffer buffer,
    double value,
  ) {
    return _CBDMessageBuffer_WriteFloat(
      buffer,
      value,
    );
  }

  late final _CBDMessageBuffer_WriteFloatPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer, ffi.Float)>>(
      'CBDMessageBuffer_WriteFloat');
  late final _CBDMessageBuffer_WriteFloat = _CBDMessageBuffer_WriteFloatPtr
      .asFunction<void Function(CBDMessageBuffer, double)>();

  void CBDMessageBuffer_WriteDouble(
    CBDMessageBuffer buffer,
    double value,
  ) {
    return _CBDMessageBuffer_WriteDouble(
      buffer,
      value,
    );
  }

  late final _CBDMessageBuffer_WriteDoublePtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer, ffi.Double)>>(
      'CBDMessageBuffer_WriteDouble');
  late final _CBDMessageBuffer_WriteDouble = _CBDMessageBuffer_WriteDoublePtr
      .asFunction<void Function(CBDMessageBuffer, double)>();

  ffi.Pointer<ffi.Void> CBDMessageBuffer_Allocate(
    CBDMessageBuffer buffer,
    int size,
  ) {
    return _CBDMessageBuffer_Allocate(
      buffer,
      size,
    );
  }

  late final _CBDMessageBuffer_AllocatePtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Void> Function(
              CBDMessageBuffer, ffi.Size)>>('CBDMessageBuffer_Allocate');
  late final _CBDMessageBuffer_Allocate = _CBDMessageBuffer_AllocatePtr
      .asFunction<ffi.Pointer<ffi.Void> Function(CBDMessageBuffer, int)>();

  bool CBDMessageBuffer_ReadBool(
    CBDMessageBuffer buffer,
  ) {
    return _CBDMessageBuffer_ReadBool(
      buffer,
    );
  }

  late final _CBDMessageBuffer_ReadBoolPtr =
      _lookup<ffi.NativeFunction<ffi.Bool Function(CBDMessageBuffer)>>(
          'CBDMessageBuffer_ReadBool');
  late final _CBDMessageBuffer_ReadBool = _CBDMessageBuffer_ReadBoolPtr
      .asFunction<bool Function(CBDMessageBuffer)>();

  int CBDMessageBuffer_ReadUInt8(
    CBDMessageBuffer buffer,
  ) {
    return _CBDMessageBuffer_ReadUInt8(
      buffer,
    );
  }

  late final _CBDMessageBuffer_ReadUInt8Ptr =
      _lookup<ffi.NativeFunction<ffi.Uint8 Function(CBDMessageBuffer)>>(
          'CBDMessageBuffer_ReadUInt8');
  late final _CBDMessageBuffer_ReadUInt8 = _CBDMessageBuffer_ReadUInt8Ptr
      .asFunction<int Function(CBDMessageBuffer)>();

  int CBDMessageBuffer_ReadInt8(
    CBDMessageBuffer buffer,
  ) {
    return _CBDMessageBuffer_ReadInt8(
      buffer,
    );
  }

  late final _CBDMessageBuffer_ReadInt8Ptr =
      _lookup<ffi.NativeFunction<ffi.Int8 Function(CBDMessageBuffer)>>(
          'CBDMessageBuffer_ReadInt8');
  late final _CBDMessageBuffer_ReadInt8 = _CBDMessageBuffer_ReadInt8Ptr
      .asFunction<int Function(CBDMessageBuffer)>();

  int CBDMessageBuffer_ReadUInt16(
    CBDMessageBuffer buffer,
  ) {
    return _CBDMessageBuffer_ReadUInt16(
      buffer,
    );
  }

  late final _CBDMessageBuffer_ReadUInt16Ptr =
      _lookup<ffi.NativeFunction<ffi.Uint16 Function(CBDMessageBuffer)>>(
          'CBDMessageBuffer_ReadUInt16');
  late final _CBDMessageBuffer_ReadUInt16 = _CBDMessageBuffer_ReadUInt16Ptr
      .asFunction<int Function(CBDMessageBuffer)>();

  int CBDMessageBuffer_ReadInt16(
    CBDMessageBuffer buffer,
  ) {
    return _CBDMessageBuffer_ReadInt16(
      buffer,
    );
  }

  late final _CBDMessageBuffer_ReadInt16Ptr =
      _lookup<ffi.NativeFunction<ffi.Int16 Function(CBDMessageBuffer)>>(
          'CBDMessageBuffer_ReadInt16');
  late final _CBDMessageBuffer_ReadInt16 = _CBDMessageBuffer_ReadInt16Ptr
      .asFunction<int Function(CBDMessageBuffer)>();

  int CBDMessageBuffer_ReadUInt32(
    CBDMessageBuffer buffer,
  ) {
    return _CBDMessageBuffer_ReadUInt32(
      buffer,
    );
  }

  late final _CBDMessageBuffer_ReadUInt32Ptr =
      _lookup<ffi.NativeFunction<ffi.Uint32 Function(CBDMessageBuffer)>>(
          'CBDMessageBuffer_ReadUInt32');
  late final _CBDMessageBuffer_ReadUInt32 = _CBDMessageBuffer_ReadUInt32Ptr
      .asFunction<int Function(CBDMessageBuffer)>();

  int CBDMessageBuffer_ReadInt32(
    CBDMessageBuffer buffer,
  ) {
    return _CBDMessageBuffer_ReadInt32(
      buffer,
    );
  }

  late final _CBDMessageBuffer_ReadInt32Ptr =
      _lookup<ffi.NativeFunction<ffi.Int32 Function(CBDMessageBuffer)>>(
          'CBDMessageBuffer_ReadInt32');
  late final _CBDMessageBuffer_ReadInt32 = _CBDMessageBuffer_ReadInt32Ptr
      .asFunction<int Function(CBDMessageBuffer)>();

  int CBDMessageBuffer_ReadUInt64(
    CBDMessageBuffer buffer,
  ) {
    return _CBDMessageBuffer_ReadUInt64(
      buffer,
    );
  }

  late final _CBDMessageBuffer_ReadUInt64Ptr =
      _lookup<ffi.NativeFunction<ffi.Uint64 Function(CBDMessageBuffer)>>(
          'CBDMessageBuffer_ReadUInt64');
  late final _CBDMessageBuffer_ReadUInt64 = _CBDMessageBuffer_ReadUInt64Ptr
      .asFunction<int Function(CBDMessageBuffer)>();

  int CBDMessageBuffer_ReadInt64(
    CBDMessageBuffer buffer,
  ) {
    return _CBDMessageBuffer_ReadInt64(
      buffer,
    );
  }

  late final _CBDMessageBuffer_ReadInt64Ptr =
      _lookup<ffi.NativeFunction<ffi.Int64 Function(CBDMessageBuffer)>>(
          'CBDMessageBuffer_ReadInt64');
  late final _CBDMessageBuffer_ReadInt64 = _CBDMessageBuffer_ReadInt64Ptr
      .asFunction<int Function(CBDMessageBuffer)>();

  double CBDMessageBuffer_ReadFloat(
    CBDMessageBuffer buffer,
  ) {
    return _CBDMessageBuffer_ReadFloat(
      buffer,
    );
  }

  late final _CBDMessageBuffer_ReadFloatPtr =
      _lookup<ffi.NativeFunction<ffi.Float Function(CBDMessageBuffer)>>(
          'CBDMessageBuffer_ReadFloat');
  late final _CBDMessageBuffer_ReadFloat = _CBDMessageBuffer_ReadFloatPtr
      .asFunction<double Function(CBDMessageBuffer)>();

  double CBDMessageBuffer_ReadDouble(
    CBDMessageBuffer buffer,
  ) {
    return _CBDMessageBuffer_ReadDouble(
      buffer,
    );
  }

  late final _CBDMessageBuffer_ReadDoublePtr =
      _lookup<ffi.NativeFunction<ffi.Double Function(CBDMessageBuffer)>>(
          'CBDMessageBuffer_ReadDouble');
  late final _CBDMessageBuffer_ReadDouble = _CBDMessageBuffer_ReadDoublePtr
      .asFunction<double Function(CBDMessageBuffer)>();

  CBLSlice CBDMessageBuffer_ReadData(
    CBDMessageBuffer buffer,
  ) {
    return _CBDMessageBuffer_ReadData(
      buffer,
    );
  }

  late final _CBDMessageBuffer_ReadDataPtr =
      _lookup<ffi.NativeFunction<CBLSlice Function(CBDMessageBuffer)>>(
          'CBDMessageBuffer_ReadData');
  late final _CBDMessageBuffer_ReadData = _CBDMessageBuffer_ReadDataPtr
      .asFunction<CBLSlice Function(CBDMessageBuffer)>();

  CBDConnection CBDConnection_Create(
    int port,
  ) {
    return _CBDConnection_Create(
      port,
    );
  }

  late final _CBDConnection_CreatePtr =
      _lookup<ffi.NativeFunction<CBDConnection Function(Dart_Port_DL)>>(
          'CBDConnection_Create');
  late final _CBDConnection_Create =
      _CBDConnection_CreatePtr.asFunction<CBDConnection Function(int)>();

  void CBDConnection_Destroy(
    CBDConnection connection,
  ) {
    return _CBDConnection_Destroy(
      connection,
    );
  }

  late final _CBDConnection_DestroyPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(CBDConnection)>>(
          'CBDConnection_Destroy');
  late final _CBDConnection_Destroy =
      _CBDConnection_DestroyPtr.asFunction<void Function(CBDConnection)>();

  void CBDConnection_Open(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_Open(
      connection,
      request,
    );
  }

  late final _CBDConnection_OpenPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBDConnection_Open');
  late final _CBDConnection_Open = _CBDConnection_OpenPtr.asFunction<
      void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_Close(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_Close(
      connection,
      request,
    );
  }

  late final _CBDConnection_ClosePtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBDConnection_Close');
  late final _CBDConnection_Close = _CBDConnection_ClosePtr.asFunction<
      void Function(CBDConnection, CBDMessageBuffer)>();

  void CBDConnection_OpenBucket(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBDConnection_OpenBucket(
      connection,
      request,
    );
  }

  late final _CBDConnection_OpenBucketPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBDConnection_OpenBucket');
  late final _CBDConnection_OpenBucket = _CBDConnection_OpenBucketPtr
      .asFunction<void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_Prepend(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_Prepend(
      connection,
      request,
    );
  }

  late final _CBLConnection_PrependPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBLConnection_Prepend');
  late final _CBLConnection_Prepend = _CBLConnection_PrependPtr.asFunction<
      void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_Exists(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_Exists(
      connection,
      request,
    );
  }

  late final _CBLConnection_ExistsPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBLConnection_Exists');
  late final _CBLConnection_Exists = _CBLConnection_ExistsPtr.asFunction<
      void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_HttpNoop(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_HttpNoop(
      connection,
      request,
    );
  }

  late final _CBLConnection_HttpNoopPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBLConnection_HttpNoop');
  late final _CBLConnection_HttpNoop = _CBLConnection_HttpNoopPtr.asFunction<
      void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_Unlock(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_Unlock(
      connection,
      request,
    );
  }

  late final _CBLConnection_UnlockPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBLConnection_Unlock');
  late final _CBLConnection_Unlock = _CBLConnection_UnlockPtr.asFunction<
      void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_GetAllReplicas(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_GetAllReplicas(
      connection,
      request,
    );
  }

  late final _CBLConnection_GetAllReplicasPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBLConnection_GetAllReplicas');
  late final _CBLConnection_GetAllReplicas = _CBLConnection_GetAllReplicasPtr
      .asFunction<void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_Upsert(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_Upsert(
      connection,
      request,
    );
  }

  late final _CBLConnection_UpsertPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBLConnection_Upsert');
  late final _CBLConnection_Upsert = _CBLConnection_UpsertPtr.asFunction<
      void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_GetAnyReplica(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_GetAnyReplica(
      connection,
      request,
    );
  }

  late final _CBLConnection_GetAnyReplicaPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBLConnection_GetAnyReplica');
  late final _CBLConnection_GetAnyReplica = _CBLConnection_GetAnyReplicaPtr
      .asFunction<void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_Append(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_Append(
      connection,
      request,
    );
  }

  late final _CBLConnection_AppendPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBLConnection_Append');
  late final _CBLConnection_Append = _CBLConnection_AppendPtr.asFunction<
      void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_Query(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_Query(
      connection,
      request,
    );
  }

  late final _CBLConnection_QueryPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBLConnection_Query');
  late final _CBLConnection_Query = _CBLConnection_QueryPtr.asFunction<
      void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_McbpNoop(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_McbpNoop(
      connection,
      request,
    );
  }

  late final _CBLConnection_McbpNoopPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBLConnection_McbpNoop');
  late final _CBLConnection_McbpNoop = _CBLConnection_McbpNoopPtr.asFunction<
      void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_Replace(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_Replace(
      connection,
      request,
    );
  }

  late final _CBLConnection_ReplacePtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBLConnection_Replace');
  late final _CBLConnection_Replace = _CBLConnection_ReplacePtr.asFunction<
      void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_GetAndTouch(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_GetAndTouch(
      connection,
      request,
    );
  }

  late final _CBLConnection_GetAndTouchPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBLConnection_GetAndTouch');
  late final _CBLConnection_GetAndTouch = _CBLConnection_GetAndTouchPtr
      .asFunction<void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_Remove(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_Remove(
      connection,
      request,
    );
  }

  late final _CBLConnection_RemovePtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBLConnection_Remove');
  late final _CBLConnection_Remove = _CBLConnection_RemovePtr.asFunction<
      void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_Get(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_Get(
      connection,
      request,
    );
  }

  late final _CBLConnection_GetPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBLConnection_Get');
  late final _CBLConnection_Get = _CBLConnection_GetPtr.asFunction<
      void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_Analytics(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_Analytics(
      connection,
      request,
    );
  }

  late final _CBLConnection_AnalyticsPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBLConnection_Analytics');
  late final _CBLConnection_Analytics = _CBLConnection_AnalyticsPtr.asFunction<
      void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_GetProjected(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_GetProjected(
      connection,
      request,
    );
  }

  late final _CBLConnection_GetProjectedPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBLConnection_GetProjected');
  late final _CBLConnection_GetProjected = _CBLConnection_GetProjectedPtr
      .asFunction<void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_Decrement(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_Decrement(
      connection,
      request,
    );
  }

  late final _CBLConnection_DecrementPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBLConnection_Decrement');
  late final _CBLConnection_Decrement = _CBLConnection_DecrementPtr.asFunction<
      void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_Search(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_Search(
      connection,
      request,
    );
  }

  late final _CBLConnection_SearchPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBLConnection_Search');
  late final _CBLConnection_Search = _CBLConnection_SearchPtr.asFunction<
      void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_Touch(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_Touch(
      connection,
      request,
    );
  }

  late final _CBLConnection_TouchPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBLConnection_Touch');
  late final _CBLConnection_Touch = _CBLConnection_TouchPtr.asFunction<
      void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_LookupIn(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_LookupIn(
      connection,
      request,
    );
  }

  late final _CBLConnection_LookupInPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBLConnection_LookupIn');
  late final _CBLConnection_LookupIn = _CBLConnection_LookupInPtr.asFunction<
      void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_DocumentView(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_DocumentView(
      connection,
      request,
    );
  }

  late final _CBLConnection_DocumentViewPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBLConnection_DocumentView');
  late final _CBLConnection_DocumentView = _CBLConnection_DocumentViewPtr
      .asFunction<void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_GetAndLock(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_GetAndLock(
      connection,
      request,
    );
  }

  late final _CBLConnection_GetAndLockPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBLConnection_GetAndLock');
  late final _CBLConnection_GetAndLock = _CBLConnection_GetAndLockPtr
      .asFunction<void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_Insert(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_Insert(
      connection,
      request,
    );
  }

  late final _CBLConnection_InsertPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBLConnection_Insert');
  late final _CBLConnection_Insert = _CBLConnection_InsertPtr.asFunction<
      void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_MutateIn(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_MutateIn(
      connection,
      request,
    );
  }

  late final _CBLConnection_MutateInPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBLConnection_MutateIn');
  late final _CBLConnection_MutateIn = _CBLConnection_MutateInPtr.asFunction<
      void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_Increment(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_Increment(
      connection,
      request,
    );
  }

  late final _CBLConnection_IncrementPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              CBDConnection, CBDMessageBuffer)>>('CBLConnection_Increment');
  late final _CBLConnection_Increment = _CBLConnection_IncrementPtr.asFunction<
      void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementGroupUpsert(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementGroupUpsert(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementGroupUpsertPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBLConnection_ManagementGroupUpsert');
  late final _CBLConnection_ManagementGroupUpsert =
      _CBLConnection_ManagementGroupUpsertPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementEventingPauseFunction(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementEventingPauseFunction(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementEventingPauseFunctionPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBLConnection_ManagementEventingPauseFunction');
  late final _CBLConnection_ManagementEventingPauseFunction =
      _CBLConnection_ManagementEventingPauseFunctionPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementQueryIndexGetAll(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementQueryIndexGetAll(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementQueryIndexGetAllPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBLConnection_ManagementQueryIndexGetAll');
  late final _CBLConnection_ManagementQueryIndexGetAll =
      _CBLConnection_ManagementQueryIndexGetAllPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementCollectionCreate(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementCollectionCreate(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementCollectionCreatePtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBLConnection_ManagementCollectionCreate');
  late final _CBLConnection_ManagementCollectionCreate =
      _CBLConnection_ManagementCollectionCreatePtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementEventingResumeFunction(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementEventingResumeFunction(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementEventingResumeFunctionPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBLConnection_ManagementEventingResumeFunction');
  late final _CBLConnection_ManagementEventingResumeFunction =
      _CBLConnection_ManagementEventingResumeFunctionPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementSearchIndexGetStats(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementSearchIndexGetStats(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementSearchIndexGetStatsPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBLConnection_ManagementSearchIndexGetStats');
  late final _CBLConnection_ManagementSearchIndexGetStats =
      _CBLConnection_ManagementSearchIndexGetStatsPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementBucketGetAll(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementBucketGetAll(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementBucketGetAllPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBLConnection_ManagementBucketGetAll');
  late final _CBLConnection_ManagementBucketGetAll =
      _CBLConnection_ManagementBucketGetAllPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementQueryIndexBuildDeferred(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementQueryIndexBuildDeferred(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementQueryIndexBuildDeferredPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBLConnection_ManagementQueryIndexBuildDeferred');
  late final _CBLConnection_ManagementQueryIndexBuildDeferred =
      _CBLConnection_ManagementQueryIndexBuildDeferredPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementClusterDescribe(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementClusterDescribe(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementClusterDescribePtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBLConnection_ManagementClusterDescribe');
  late final _CBLConnection_ManagementClusterDescribe =
      _CBLConnection_ManagementClusterDescribePtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementSearchIndexGetAll(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementSearchIndexGetAll(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementSearchIndexGetAllPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBLConnection_ManagementSearchIndexGetAll');
  late final _CBLConnection_ManagementSearchIndexGetAll =
      _CBLConnection_ManagementSearchIndexGetAllPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementSearchIndexAnalyzeDocument(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementSearchIndexAnalyzeDocument(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementSearchIndexAnalyzeDocumentPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBLConnection_ManagementSearchIndexAnalyzeDocument');
  late final _CBLConnection_ManagementSearchIndexAnalyzeDocument =
      _CBLConnection_ManagementSearchIndexAnalyzeDocumentPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementQueryIndexDrop(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementQueryIndexDrop(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementQueryIndexDropPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBLConnection_ManagementQueryIndexDrop');
  late final _CBLConnection_ManagementQueryIndexDrop =
      _CBLConnection_ManagementQueryIndexDropPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementAnalyticsDatasetCreate(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementAnalyticsDatasetCreate(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementAnalyticsDatasetCreatePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBLConnection_ManagementAnalyticsDatasetCreate');
  late final _CBLConnection_ManagementAnalyticsDatasetCreate =
      _CBLConnection_ManagementAnalyticsDatasetCreatePtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementBucketFlush(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementBucketFlush(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementBucketFlushPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBLConnection_ManagementBucketFlush');
  late final _CBLConnection_ManagementBucketFlush =
      _CBLConnection_ManagementBucketFlushPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementAnalyticsIndexDrop(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementAnalyticsIndexDrop(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementAnalyticsIndexDropPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBLConnection_ManagementAnalyticsIndexDrop');
  late final _CBLConnection_ManagementAnalyticsIndexDrop =
      _CBLConnection_ManagementAnalyticsIndexDropPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementQueryIndexCreate(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementQueryIndexCreate(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementQueryIndexCreatePtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBLConnection_ManagementQueryIndexCreate');
  late final _CBLConnection_ManagementQueryIndexCreate =
      _CBLConnection_ManagementQueryIndexCreatePtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementSearchIndexUpsert(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementSearchIndexUpsert(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementSearchIndexUpsertPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBLConnection_ManagementSearchIndexUpsert');
  late final _CBLConnection_ManagementSearchIndexUpsert =
      _CBLConnection_ManagementSearchIndexUpsertPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementAnalyticsDatasetGetAll(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementAnalyticsDatasetGetAll(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementAnalyticsDatasetGetAllPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBLConnection_ManagementAnalyticsDatasetGetAll');
  late final _CBLConnection_ManagementAnalyticsDatasetGetAll =
      _CBLConnection_ManagementAnalyticsDatasetGetAllPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementAnalyticsIndexGetAll(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementAnalyticsIndexGetAll(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementAnalyticsIndexGetAllPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBLConnection_ManagementAnalyticsIndexGetAll');
  late final _CBLConnection_ManagementAnalyticsIndexGetAll =
      _CBLConnection_ManagementAnalyticsIndexGetAllPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementAnalyticsGetPendingMutations(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementAnalyticsGetPendingMutations(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementAnalyticsGetPendingMutationsPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBLConnection_ManagementAnalyticsGetPendingMutations');
  late final _CBLConnection_ManagementAnalyticsGetPendingMutations =
      _CBLConnection_ManagementAnalyticsGetPendingMutationsPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementAnalyticsDataverseDrop(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementAnalyticsDataverseDrop(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementAnalyticsDataverseDropPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBLConnection_ManagementAnalyticsDataverseDrop');
  late final _CBLConnection_ManagementAnalyticsDataverseDrop =
      _CBLConnection_ManagementAnalyticsDataverseDropPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementAnalyticsLinkConnect(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementAnalyticsLinkConnect(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementAnalyticsLinkConnectPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBLConnection_ManagementAnalyticsLinkConnect');
  late final _CBLConnection_ManagementAnalyticsLinkConnect =
      _CBLConnection_ManagementAnalyticsLinkConnectPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementCollectionsManifestGet(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementCollectionsManifestGet(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementCollectionsManifestGetPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBLConnection_ManagementCollectionsManifestGet');
  late final _CBLConnection_ManagementCollectionsManifestGet =
      _CBLConnection_ManagementCollectionsManifestGetPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementChangePassword(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementChangePassword(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementChangePasswordPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBLConnection_ManagementChangePassword');
  late final _CBLConnection_ManagementChangePassword =
      _CBLConnection_ManagementChangePasswordPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementClusterDeveloperPreviewEnable(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementClusterDeveloperPreviewEnable(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementClusterDeveloperPreviewEnablePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
          'CBLConnection_ManagementClusterDeveloperPreviewEnable');
  late final _CBLConnection_ManagementClusterDeveloperPreviewEnable =
      _CBLConnection_ManagementClusterDeveloperPreviewEnablePtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementAnalyticsLinkDrop(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementAnalyticsLinkDrop(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementAnalyticsLinkDropPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBLConnection_ManagementAnalyticsLinkDrop');
  late final _CBLConnection_ManagementAnalyticsLinkDrop =
      _CBLConnection_ManagementAnalyticsLinkDropPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementBucketDescribe(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementBucketDescribe(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementBucketDescribePtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBLConnection_ManagementBucketDescribe');
  late final _CBLConnection_ManagementBucketDescribe =
      _CBLConnection_ManagementBucketDescribePtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementEventingUpsertFunction(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementEventingUpsertFunction(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementEventingUpsertFunctionPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBLConnection_ManagementEventingUpsertFunction');
  late final _CBLConnection_ManagementEventingUpsertFunction =
      _CBLConnection_ManagementEventingUpsertFunctionPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementViewIndexGetAll(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementViewIndexGetAll(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementViewIndexGetAllPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBLConnection_ManagementViewIndexGetAll');
  late final _CBLConnection_ManagementViewIndexGetAll =
      _CBLConnection_ManagementViewIndexGetAllPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementBucketGet(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementBucketGet(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementBucketGetPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBLConnection_ManagementBucketGet');
  late final _CBLConnection_ManagementBucketGet =
      _CBLConnection_ManagementBucketGetPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementBucketUpdate(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementBucketUpdate(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementBucketUpdatePtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBLConnection_ManagementBucketUpdate');
  late final _CBLConnection_ManagementBucketUpdate =
      _CBLConnection_ManagementBucketUpdatePtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementBucketDrop(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementBucketDrop(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementBucketDropPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBLConnection_ManagementBucketDrop');
  late final _CBLConnection_ManagementBucketDrop =
      _CBLConnection_ManagementBucketDropPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementFreeform(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementFreeform(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementFreeformPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBLConnection_ManagementFreeform');
  late final _CBLConnection_ManagementFreeform =
      _CBLConnection_ManagementFreeformPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementScopeDrop(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementScopeDrop(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementScopeDropPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBLConnection_ManagementScopeDrop');
  late final _CBLConnection_ManagementScopeDrop =
      _CBLConnection_ManagementScopeDropPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementViewIndexUpsert(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementViewIndexUpsert(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementViewIndexUpsertPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBLConnection_ManagementViewIndexUpsert');
  late final _CBLConnection_ManagementViewIndexUpsert =
      _CBLConnection_ManagementViewIndexUpsertPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementUserGetAll(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementUserGetAll(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementUserGetAllPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBLConnection_ManagementUserGetAll');
  late final _CBLConnection_ManagementUserGetAll =
      _CBLConnection_ManagementUserGetAllPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementScopeCreate(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementScopeCreate(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementScopeCreatePtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBLConnection_ManagementScopeCreate');
  late final _CBLConnection_ManagementScopeCreate =
      _CBLConnection_ManagementScopeCreatePtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementEventingGetFunction(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementEventingGetFunction(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementEventingGetFunctionPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBLConnection_ManagementEventingGetFunction');
  late final _CBLConnection_ManagementEventingGetFunction =
      _CBLConnection_ManagementEventingGetFunctionPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementViewIndexDrop(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementViewIndexDrop(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementViewIndexDropPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBLConnection_ManagementViewIndexDrop');
  late final _CBLConnection_ManagementViewIndexDrop =
      _CBLConnection_ManagementViewIndexDropPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementAnalyticsLinkDisconnect(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementAnalyticsLinkDisconnect(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementAnalyticsLinkDisconnectPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBLConnection_ManagementAnalyticsLinkDisconnect');
  late final _CBLConnection_ManagementAnalyticsLinkDisconnect =
      _CBLConnection_ManagementAnalyticsLinkDisconnectPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementUserUpsert(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementUserUpsert(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementUserUpsertPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBLConnection_ManagementUserUpsert');
  late final _CBLConnection_ManagementUserUpsert =
      _CBLConnection_ManagementUserUpsertPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementEventingGetStatus(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementEventingGetStatus(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementEventingGetStatusPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBLConnection_ManagementEventingGetStatus');
  late final _CBLConnection_ManagementEventingGetStatus =
      _CBLConnection_ManagementEventingGetStatusPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementEventingGetAllFunctions(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementEventingGetAllFunctions(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementEventingGetAllFunctionsPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBLConnection_ManagementEventingGetAllFunctions');
  late final _CBLConnection_ManagementEventingGetAllFunctions =
      _CBLConnection_ManagementEventingGetAllFunctionsPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementAnalyticsIndexCreate(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementAnalyticsIndexCreate(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementAnalyticsIndexCreatePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBLConnection_ManagementAnalyticsIndexCreate');
  late final _CBLConnection_ManagementAnalyticsIndexCreate =
      _CBLConnection_ManagementAnalyticsIndexCreatePtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementScopeGetAll(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementScopeGetAll(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementScopeGetAllPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBLConnection_ManagementScopeGetAll');
  late final _CBLConnection_ManagementScopeGetAll =
      _CBLConnection_ManagementScopeGetAllPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementUserGet(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementUserGet(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementUserGetPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBLConnection_ManagementUserGet');
  late final _CBLConnection_ManagementUserGet =
      _CBLConnection_ManagementUserGetPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementSearchIndexDrop(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementSearchIndexDrop(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementSearchIndexDropPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBLConnection_ManagementSearchIndexDrop');
  late final _CBLConnection_ManagementSearchIndexDrop =
      _CBLConnection_ManagementSearchIndexDropPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementSearchIndexControlPlanFreeze(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementSearchIndexControlPlanFreeze(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementSearchIndexControlPlanFreezePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBLConnection_ManagementSearchIndexControlPlanFreeze');
  late final _CBLConnection_ManagementSearchIndexControlPlanFreeze =
      _CBLConnection_ManagementSearchIndexControlPlanFreezePtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementSearchIndexStats(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementSearchIndexStats(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementSearchIndexStatsPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBLConnection_ManagementSearchIndexStats');
  late final _CBLConnection_ManagementSearchIndexStats =
      _CBLConnection_ManagementSearchIndexStatsPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementUserDrop(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementUserDrop(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementUserDropPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBLConnection_ManagementUserDrop');
  late final _CBLConnection_ManagementUserDrop =
      _CBLConnection_ManagementUserDropPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementAnalyticsDataverseCreate(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementAnalyticsDataverseCreate(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementAnalyticsDataverseCreatePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBLConnection_ManagementAnalyticsDataverseCreate');
  late final _CBLConnection_ManagementAnalyticsDataverseCreate =
      _CBLConnection_ManagementAnalyticsDataverseCreatePtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementSearchIndexControlQuery(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementSearchIndexControlQuery(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementSearchIndexControlQueryPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBLConnection_ManagementSearchIndexControlQuery');
  late final _CBLConnection_ManagementSearchIndexControlQuery =
      _CBLConnection_ManagementSearchIndexControlQueryPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementRoleGetAll(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementRoleGetAll(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementRoleGetAllPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBLConnection_ManagementRoleGetAll');
  late final _CBLConnection_ManagementRoleGetAll =
      _CBLConnection_ManagementRoleGetAllPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementGroupGetAll(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementGroupGetAll(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementGroupGetAllPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBLConnection_ManagementGroupGetAll');
  late final _CBLConnection_ManagementGroupGetAll =
      _CBLConnection_ManagementGroupGetAllPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementEventingDropFunction(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementEventingDropFunction(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementEventingDropFunctionPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBLConnection_ManagementEventingDropFunction');
  late final _CBLConnection_ManagementEventingDropFunction =
      _CBLConnection_ManagementEventingDropFunctionPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementCollectionDrop(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementCollectionDrop(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementCollectionDropPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBLConnection_ManagementCollectionDrop');
  late final _CBLConnection_ManagementCollectionDrop =
      _CBLConnection_ManagementCollectionDropPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementSearchIndexControlIngest(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementSearchIndexControlIngest(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementSearchIndexControlIngestPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBLConnection_ManagementSearchIndexControlIngest');
  late final _CBLConnection_ManagementSearchIndexControlIngest =
      _CBLConnection_ManagementSearchIndexControlIngestPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementEventingDeployFunction(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementEventingDeployFunction(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementEventingDeployFunctionPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBLConnection_ManagementEventingDeployFunction');
  late final _CBLConnection_ManagementEventingDeployFunction =
      _CBLConnection_ManagementEventingDeployFunctionPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementGroupGet(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementGroupGet(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementGroupGetPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBLConnection_ManagementGroupGet');
  late final _CBLConnection_ManagementGroupGet =
      _CBLConnection_ManagementGroupGetPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementViewIndexGet(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementViewIndexGet(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementViewIndexGetPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBLConnection_ManagementViewIndexGet');
  late final _CBLConnection_ManagementViewIndexGet =
      _CBLConnection_ManagementViewIndexGetPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementBucketCreate(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementBucketCreate(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementBucketCreatePtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBLConnection_ManagementBucketCreate');
  late final _CBLConnection_ManagementBucketCreate =
      _CBLConnection_ManagementBucketCreatePtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementAnalyticsDatasetDrop(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementAnalyticsDatasetDrop(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementAnalyticsDatasetDropPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBLConnection_ManagementAnalyticsDatasetDrop');
  late final _CBLConnection_ManagementAnalyticsDatasetDrop =
      _CBLConnection_ManagementAnalyticsDatasetDropPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementGroupDrop(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementGroupDrop(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementGroupDropPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBLConnection_ManagementGroupDrop');
  late final _CBLConnection_ManagementGroupDrop =
      _CBLConnection_ManagementGroupDropPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementSearchIndexGet(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementSearchIndexGet(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementSearchIndexGetPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBLConnection_ManagementSearchIndexGet');
  late final _CBLConnection_ManagementSearchIndexGet =
      _CBLConnection_ManagementSearchIndexGetPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementQueryIndexGetAllDeferred(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementQueryIndexGetAllDeferred(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementQueryIndexGetAllDeferredPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBLConnection_ManagementQueryIndexGetAllDeferred');
  late final _CBLConnection_ManagementQueryIndexGetAllDeferred =
      _CBLConnection_ManagementQueryIndexGetAllDeferredPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementQueryIndexBuild(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementQueryIndexBuild(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementQueryIndexBuildPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(CBDConnection,
              CBDMessageBuffer)>>('CBLConnection_ManagementQueryIndexBuild');
  late final _CBLConnection_ManagementQueryIndexBuild =
      _CBLConnection_ManagementQueryIndexBuildPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementEventingUndeployFunction(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementEventingUndeployFunction(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementEventingUndeployFunctionPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBLConnection_ManagementEventingUndeployFunction');
  late final _CBLConnection_ManagementEventingUndeployFunction =
      _CBLConnection_ManagementEventingUndeployFunctionPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementSearchIndexGetDocumentsCount(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementSearchIndexGetDocumentsCount(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementSearchIndexGetDocumentsCountPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBLConnection_ManagementSearchIndexGetDocumentsCount');
  late final _CBLConnection_ManagementSearchIndexGetDocumentsCount =
      _CBLConnection_ManagementSearchIndexGetDocumentsCountPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  void CBLConnection_ManagementAnalyticsLinkGetAll(
    CBDConnection connection,
    CBDMessageBuffer request,
  ) {
    return _CBLConnection_ManagementAnalyticsLinkGetAll(
      connection,
      request,
    );
  }

  late final _CBLConnection_ManagementAnalyticsLinkGetAllPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>(
      'CBLConnection_ManagementAnalyticsLinkGetAll');
  late final _CBLConnection_ManagementAnalyticsLinkGetAll =
      _CBLConnection_ManagementAnalyticsLinkGetAllPtr.asFunction<
          void Function(CBDConnection, CBDMessageBuffer)>();

  bool CBD_Init(
    ffi.Pointer<ffi.Void> data,
  ) {
    return _CBD_Init(
      data,
    );
  }

  late final _CBD_InitPtr =
      _lookup<ffi.NativeFunction<ffi.Bool Function(ffi.Pointer<ffi.Void>)>>(
          'CBD_Init');
  late final _CBD_Init =
      _CBD_InitPtr.asFunction<bool Function(ffi.Pointer<ffi.Void>)>();

  late final addresses = _SymbolAddresses(this);
}

class _SymbolAddresses {
  final LibCouchbaseDart _library;
  _SymbolAddresses(this._library);
  ffi.Pointer<ffi.NativeFunction<CBDMessageBuffer Function(ffi.Size)>>
      get CBDMessageBuffer_Create => _library._CBDMessageBuffer_CreatePtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer)>>
      get CBDMessageBuffer_Destroy => _library._CBDMessageBuffer_DestroyPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer)>>
      get CBDMessageBuffer_Reset => _library._CBDMessageBuffer_ResetPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer, ffi.Bool)>>
      get CBDMessageBuffer_WriteBool => _library._CBDMessageBuffer_WriteBoolPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer, ffi.Uint8)>>
      get CBDMessageBuffer_WriteUInt8 =>
          _library._CBDMessageBuffer_WriteUInt8Ptr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer, ffi.Int8)>>
      get CBDMessageBuffer_WriteInt8 => _library._CBDMessageBuffer_WriteInt8Ptr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer, ffi.Uint16)>>
      get CBDMessageBuffer_WriteUInt16 =>
          _library._CBDMessageBuffer_WriteUInt16Ptr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer, ffi.Int16)>>
      get CBDMessageBuffer_WriteInt16 =>
          _library._CBDMessageBuffer_WriteInt16Ptr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer, ffi.Uint32)>>
      get CBDMessageBuffer_WriteUInt32 =>
          _library._CBDMessageBuffer_WriteUInt32Ptr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer, ffi.Int32)>>
      get CBDMessageBuffer_WriteInt32 =>
          _library._CBDMessageBuffer_WriteInt32Ptr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer, ffi.Uint64)>>
      get CBDMessageBuffer_WriteUInt64 =>
          _library._CBDMessageBuffer_WriteUInt64Ptr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer, ffi.Int64)>>
      get CBDMessageBuffer_WriteInt64 =>
          _library._CBDMessageBuffer_WriteInt64Ptr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer, ffi.Float)>>
      get CBDMessageBuffer_WriteFloat =>
          _library._CBDMessageBuffer_WriteFloatPtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(CBDMessageBuffer, ffi.Double)>>
      get CBDMessageBuffer_WriteDouble =>
          _library._CBDMessageBuffer_WriteDoublePtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(CBDMessageBuffer, ffi.Size)>>
      get CBDMessageBuffer_Allocate => _library._CBDMessageBuffer_AllocatePtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Bool Function(CBDMessageBuffer)>>
      get CBDMessageBuffer_ReadBool => _library._CBDMessageBuffer_ReadBoolPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Uint8 Function(CBDMessageBuffer)>>
      get CBDMessageBuffer_ReadUInt8 => _library._CBDMessageBuffer_ReadUInt8Ptr;
  ffi.Pointer<ffi.NativeFunction<ffi.Int8 Function(CBDMessageBuffer)>>
      get CBDMessageBuffer_ReadInt8 => _library._CBDMessageBuffer_ReadInt8Ptr;
  ffi.Pointer<ffi.NativeFunction<ffi.Uint16 Function(CBDMessageBuffer)>>
      get CBDMessageBuffer_ReadUInt16 =>
          _library._CBDMessageBuffer_ReadUInt16Ptr;
  ffi.Pointer<ffi.NativeFunction<ffi.Int16 Function(CBDMessageBuffer)>>
      get CBDMessageBuffer_ReadInt16 => _library._CBDMessageBuffer_ReadInt16Ptr;
  ffi.Pointer<ffi.NativeFunction<ffi.Uint32 Function(CBDMessageBuffer)>>
      get CBDMessageBuffer_ReadUInt32 =>
          _library._CBDMessageBuffer_ReadUInt32Ptr;
  ffi.Pointer<ffi.NativeFunction<ffi.Int32 Function(CBDMessageBuffer)>>
      get CBDMessageBuffer_ReadInt32 => _library._CBDMessageBuffer_ReadInt32Ptr;
  ffi.Pointer<ffi.NativeFunction<ffi.Uint64 Function(CBDMessageBuffer)>>
      get CBDMessageBuffer_ReadUInt64 =>
          _library._CBDMessageBuffer_ReadUInt64Ptr;
  ffi.Pointer<ffi.NativeFunction<ffi.Int64 Function(CBDMessageBuffer)>>
      get CBDMessageBuffer_ReadInt64 => _library._CBDMessageBuffer_ReadInt64Ptr;
  ffi.Pointer<ffi.NativeFunction<ffi.Float Function(CBDMessageBuffer)>>
      get CBDMessageBuffer_ReadFloat => _library._CBDMessageBuffer_ReadFloatPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Double Function(CBDMessageBuffer)>>
      get CBDMessageBuffer_ReadDouble =>
          _library._CBDMessageBuffer_ReadDoublePtr;
  ffi.Pointer<ffi.NativeFunction<CBLSlice Function(CBDMessageBuffer)>>
      get CBDMessageBuffer_ReadData => _library._CBDMessageBuffer_ReadDataPtr;
  ffi.Pointer<ffi.NativeFunction<CBDConnection Function(Dart_Port_DL)>>
      get CBDConnection_Create => _library._CBDConnection_CreatePtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(CBDConnection)>>
      get CBDConnection_Destroy => _library._CBDConnection_DestroyPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_Open => _library._CBDConnection_OpenPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_Close => _library._CBDConnection_ClosePtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBDConnection_OpenBucket => _library._CBDConnection_OpenBucketPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_Prepend => _library._CBLConnection_PrependPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_Exists => _library._CBLConnection_ExistsPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_HttpNoop => _library._CBLConnection_HttpNoopPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_Unlock => _library._CBLConnection_UnlockPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_GetAllReplicas =>
          _library._CBLConnection_GetAllReplicasPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_Upsert => _library._CBLConnection_UpsertPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_GetAnyReplica =>
          _library._CBLConnection_GetAnyReplicaPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_Append => _library._CBLConnection_AppendPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_Query => _library._CBLConnection_QueryPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_McbpNoop => _library._CBLConnection_McbpNoopPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_Replace => _library._CBLConnection_ReplacePtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_GetAndTouch => _library._CBLConnection_GetAndTouchPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_Remove => _library._CBLConnection_RemovePtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_Get => _library._CBLConnection_GetPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_Analytics => _library._CBLConnection_AnalyticsPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_GetProjected => _library._CBLConnection_GetProjectedPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_Decrement => _library._CBLConnection_DecrementPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_Search => _library._CBLConnection_SearchPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_Touch => _library._CBLConnection_TouchPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_LookupIn => _library._CBLConnection_LookupInPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_DocumentView => _library._CBLConnection_DocumentViewPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_GetAndLock => _library._CBLConnection_GetAndLockPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_Insert => _library._CBLConnection_InsertPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_MutateIn => _library._CBLConnection_MutateInPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_Increment => _library._CBLConnection_IncrementPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementGroupUpsert =>
          _library._CBLConnection_ManagementGroupUpsertPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementEventingPauseFunction =>
          _library._CBLConnection_ManagementEventingPauseFunctionPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementQueryIndexGetAll =>
          _library._CBLConnection_ManagementQueryIndexGetAllPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementCollectionCreate =>
          _library._CBLConnection_ManagementCollectionCreatePtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementEventingResumeFunction =>
          _library._CBLConnection_ManagementEventingResumeFunctionPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementSearchIndexGetStats =>
          _library._CBLConnection_ManagementSearchIndexGetStatsPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementBucketGetAll =>
          _library._CBLConnection_ManagementBucketGetAllPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementQueryIndexBuildDeferred =>
          _library._CBLConnection_ManagementQueryIndexBuildDeferredPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementClusterDescribe =>
          _library._CBLConnection_ManagementClusterDescribePtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementSearchIndexGetAll =>
          _library._CBLConnection_ManagementSearchIndexGetAllPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementSearchIndexAnalyzeDocument =>
          _library._CBLConnection_ManagementSearchIndexAnalyzeDocumentPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementQueryIndexDrop =>
          _library._CBLConnection_ManagementQueryIndexDropPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementAnalyticsDatasetCreate =>
          _library._CBLConnection_ManagementAnalyticsDatasetCreatePtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementBucketFlush =>
          _library._CBLConnection_ManagementBucketFlushPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementAnalyticsIndexDrop =>
          _library._CBLConnection_ManagementAnalyticsIndexDropPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementQueryIndexCreate =>
          _library._CBLConnection_ManagementQueryIndexCreatePtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementSearchIndexUpsert =>
          _library._CBLConnection_ManagementSearchIndexUpsertPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementAnalyticsDatasetGetAll =>
          _library._CBLConnection_ManagementAnalyticsDatasetGetAllPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementAnalyticsIndexGetAll =>
          _library._CBLConnection_ManagementAnalyticsIndexGetAllPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementAnalyticsGetPendingMutations =>
          _library._CBLConnection_ManagementAnalyticsGetPendingMutationsPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementAnalyticsDataverseDrop =>
          _library._CBLConnection_ManagementAnalyticsDataverseDropPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementAnalyticsLinkConnect =>
          _library._CBLConnection_ManagementAnalyticsLinkConnectPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementCollectionsManifestGet =>
          _library._CBLConnection_ManagementCollectionsManifestGetPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementChangePassword =>
          _library._CBLConnection_ManagementChangePasswordPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementClusterDeveloperPreviewEnable =>
          _library._CBLConnection_ManagementClusterDeveloperPreviewEnablePtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementAnalyticsLinkDrop =>
          _library._CBLConnection_ManagementAnalyticsLinkDropPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementBucketDescribe =>
          _library._CBLConnection_ManagementBucketDescribePtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementEventingUpsertFunction =>
          _library._CBLConnection_ManagementEventingUpsertFunctionPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementViewIndexGetAll =>
          _library._CBLConnection_ManagementViewIndexGetAllPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementBucketGet =>
          _library._CBLConnection_ManagementBucketGetPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementBucketUpdate =>
          _library._CBLConnection_ManagementBucketUpdatePtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementBucketDrop =>
          _library._CBLConnection_ManagementBucketDropPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementFreeform =>
          _library._CBLConnection_ManagementFreeformPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementScopeDrop =>
          _library._CBLConnection_ManagementScopeDropPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementViewIndexUpsert =>
          _library._CBLConnection_ManagementViewIndexUpsertPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementUserGetAll =>
          _library._CBLConnection_ManagementUserGetAllPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementScopeCreate =>
          _library._CBLConnection_ManagementScopeCreatePtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementEventingGetFunction =>
          _library._CBLConnection_ManagementEventingGetFunctionPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementViewIndexDrop =>
          _library._CBLConnection_ManagementViewIndexDropPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementAnalyticsLinkDisconnect =>
          _library._CBLConnection_ManagementAnalyticsLinkDisconnectPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementUserUpsert =>
          _library._CBLConnection_ManagementUserUpsertPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementEventingGetStatus =>
          _library._CBLConnection_ManagementEventingGetStatusPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementEventingGetAllFunctions =>
          _library._CBLConnection_ManagementEventingGetAllFunctionsPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementAnalyticsIndexCreate =>
          _library._CBLConnection_ManagementAnalyticsIndexCreatePtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementScopeGetAll =>
          _library._CBLConnection_ManagementScopeGetAllPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementUserGet =>
          _library._CBLConnection_ManagementUserGetPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementSearchIndexDrop =>
          _library._CBLConnection_ManagementSearchIndexDropPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementSearchIndexControlPlanFreeze =>
          _library._CBLConnection_ManagementSearchIndexControlPlanFreezePtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementSearchIndexStats =>
          _library._CBLConnection_ManagementSearchIndexStatsPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementUserDrop =>
          _library._CBLConnection_ManagementUserDropPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementAnalyticsDataverseCreate =>
          _library._CBLConnection_ManagementAnalyticsDataverseCreatePtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementSearchIndexControlQuery =>
          _library._CBLConnection_ManagementSearchIndexControlQueryPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementRoleGetAll =>
          _library._CBLConnection_ManagementRoleGetAllPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementGroupGetAll =>
          _library._CBLConnection_ManagementGroupGetAllPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementEventingDropFunction =>
          _library._CBLConnection_ManagementEventingDropFunctionPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementCollectionDrop =>
          _library._CBLConnection_ManagementCollectionDropPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementSearchIndexControlIngest =>
          _library._CBLConnection_ManagementSearchIndexControlIngestPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementEventingDeployFunction =>
          _library._CBLConnection_ManagementEventingDeployFunctionPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementGroupGet =>
          _library._CBLConnection_ManagementGroupGetPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementViewIndexGet =>
          _library._CBLConnection_ManagementViewIndexGetPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementBucketCreate =>
          _library._CBLConnection_ManagementBucketCreatePtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementAnalyticsDatasetDrop =>
          _library._CBLConnection_ManagementAnalyticsDatasetDropPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementGroupDrop =>
          _library._CBLConnection_ManagementGroupDropPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementSearchIndexGet =>
          _library._CBLConnection_ManagementSearchIndexGetPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementQueryIndexGetAllDeferred =>
          _library._CBLConnection_ManagementQueryIndexGetAllDeferredPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementQueryIndexBuild =>
          _library._CBLConnection_ManagementQueryIndexBuildPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementEventingUndeployFunction =>
          _library._CBLConnection_ManagementEventingUndeployFunctionPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementSearchIndexGetDocumentsCount =>
          _library._CBLConnection_ManagementSearchIndexGetDocumentsCountPtr;
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(CBDConnection, CBDMessageBuffer)>>
      get CBLConnection_ManagementAnalyticsLinkGetAll =>
          _library._CBLConnection_ManagementAnalyticsLinkGetAllPtr;
  ffi.Pointer<ffi.NativeFunction<ffi.Bool Function(ffi.Pointer<ffi.Void>)>>
      get CBD_Init => _library._CBD_InitPtr;
}

class CBLSlice extends ffi.Struct {
  external ffi.Pointer<ffi.Void> data;

  @ffi.Size()
  external int length;
}

class CBDMessageBuffer_ extends ffi.Opaque {}

typedef CBDMessageBuffer = ffi.Pointer<CBDMessageBuffer_>;

class CBDConnection_ extends ffi.Opaque {}

typedef CBDConnection = ffi.Pointer<CBDConnection_>;
typedef Dart_Port_DL = ffi.Int64;
